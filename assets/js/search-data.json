{
  
    
        "post0": {
            "title": "Performance Task Planning/Draft",
            "content": "Idea on Project . An idea I had for this project is somehow creating a website with a whole bunch of movies and TV shows that you can choose from, and a way to search for all of them. The technical requirements for this project include: . Final program code (created independently or collaboratively) | A video that displays the running of your program and demonstrates functionality you developed (created independently) | Written responses to all the prompts in the performance task (created independently) | . I feel like the things I can design now are probably the dropdown menu to choose from all these movies, and the code for when they click on the movie, for it to take them to a different screen to watch it. It also says &quot;students need practice implementing programs that first include sequencing, then incorporate selection and iteration, and finally use procedures and lists.&quot; I feel that we&#39;ve touched most if not all of these basics over the first couple of weeks. Somethings I would still need to learn is how to put the actual movie or TV show on the site, so when they hit play, they are watching it on the site. Some resources that I have available is code.org to maybe help we work with building apps more and understanding the code, the people around me in this class, and past students that have already taken this class. . from IPython.display import Image Image(filename=&quot;/Users/dmsol/Tera/images/Screen Shot 2022-09-11 at 12.29.24 PM.png&quot;, width=600, height=400) .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%203/2022/12/01/performancetaskplanning.html",
            "relUrl": "/apcsp%20week%203/2022/12/01/performancetaskplanning.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post1": {
            "title": "Student Teaching Portfolio",
            "content": "Unit 3 Sections 1-2 . Notes . Variable is an abstraction inside a program that can hold a value | organizes data by labeling it with descriptive name | consists of three parts: name, value, and type | When naming variables, keep it easy and simple to read, because it can be messy and confusing later on | types of data, integer is a number, text/string is a word, and Boolean is data that determines if something is true or false | assignment operator allows a program to change the value represented by a variable, used to assign values to variables | value stored in a variable will be the most recent value assigned | . Data Abstraction . Method used in coding to represent data in a useful form, by taking away aspects of data that aren&#39;t being used in the situation | Variables and lists are primary tools in data abstraction | Provides a separation between the abstract properties of a data type and the concrete details of its representation | . Lists &amp; Strings . List = ordered sequence of elements | Element = individual value in a list that is assigned to a unique index | Index = a way to reference the elements in a list or string using natural numbers; each element of a string is referenced by an index | String = ordered sequence of characters (Letters, numbers, special characters) | . What are Lists? . Allow for data abstraction | Bundle variables together | Store multiple elements | Allows multiple related items to be treated as a single value | Give one name to a set of memory cells | Can keep adding elements to it as needed | Can store elements as a single variable by using a list | . 3 Types of List Operations . Assigning values to a list at certain indices | Creating an empty list and assigning it to a variable | Assigning a copy of one list to another list (setting one list equal to another list) | Practice . colorList=[&quot;green&quot;, &quot;red&quot;, &quot;pink&quot;, &quot;purple&quot;, &quot;blue&quot;, &quot;brown&quot;] print(str(colorList)) . [&#39;green&#39;, &#39;red&#39;, &#39;pink&#39;, &#39;purple&#39;, &#39;blue&#39;, &#39;brown&#39;] . Homework/Hacks . print(&quot;General Knowledge Trivia&quot;) QandA = { &quot;#1) What is the largest mammal?&quot;: &quot;blue whale&quot;, &quot;#2) What is the largest organ in the body?&quot;: &quot;skin&quot;, &quot;#3) What galaxy do we live in?&quot;: &quot;milky way&quot;, &quot;#4) Who founded Amazon?&quot;: &quot;jeff bezos&quot;, &quot;#5) What is the world&#39;s largest ocean?&quot;: &quot;pacific ocean&quot;, } def qandresp(question): # display question, return inputted response print(question) resp = input() return resp correct = 0 # Setup print(&quot;Current number of questions: &quot; + str(len(QandA))) # iterate over each key for key in QandA: rsp = qandresp(key) # save user&#39;s response to a variable rsp rsp = rsp.lower() # answer is case sensitive, so match response to lowercase for answer key to work if rsp == QandA[key]: # check if the response is equal to the answer in the dictionary print(f&quot;Correct!&quot;) correct += 1 else: print(f&quot;{rsp} is incorrect &quot;) percent = str(round(correct/len(QandA), 2)*100) # calculate percentage print(&quot;You scored &quot; + str(correct) +&quot;/&quot; + str(len(QandA))) print(f&quot;Which is also, {percent}%&quot;) # print score and percentage . General Knowledge Trivia Current number of questions: 5 #1) What is the largest mammal? Correct! #2) What is the largest organ in the body? heart is incorrect #3) What galaxy do we live in? Correct! #4) Who founded Amazon? Correct! #5) What is the world&#39;s largest ocean? atlantic ocean is incorrect You scored 3/5 Which is also, 60.0% . Unit 3 Sections 3-4 . Notes . Homework/Hacks .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%2014-17/2022/12/01/Studentteachingportfolio.html",
            "relUrl": "/apcsp%20week%2014-17/2022/12/01/Studentteachingportfolio.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post2": {
            "title": "Mathematical Expressions and Strings",
            "content": "What is an Algorithm? . An algorithm: a set of instructions that can accomplish a specific task. . An Algorithm Has Three Components . Sequencing: Algorithms do tasks in the order of specification. | . Selection: Helps choose two different outcomes based off a decision. | . Iteration: If a condition is true, then the code can repeat. | . Algorithms Can Be Represented in Two Ways . Flowcharts: Use shapes and arrows to represent the steps of an algorithm. | . . Pseudocode: A blend of human language and coding format. | Hacks: Jamboard Flowchart . Click on this link for a group activity . . . Arithmetic Operations . Arithmetic operations exist in most programming languages. . Basic Operations . Subtraction: . Represented by “-&quot; | . num1 = 2 - 1 . Addition: . Represented by &quot;+&quot; | . num1 = 2 + 1 . Multiplication: . Represented by “*” | . num1 = 2 * 1 . Division: . Represented by “/” | . num1 = 2 / 1 . Getting the Remainder: . Represented by “MOD” (% in python) | . num1 = 5 % 2 . Different Uses . Items can be numbers or variables. . Examples: . num1 = 10 num2 = num1 - 25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . Operations in parentheses should be done first. . | Division and multiplication should be done before addition and subtraction. . | Modulus works similar to multiplication and division. . | . Example: Evaluate num1 . num1 = 9 % 2 * ( 8 - 2 ) + 8 / ( 6 - 4 ) print(num1) . 10.0 . . . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable . | Value of another variable stored in a variable . | Result of an operation stored in a variable . | Result of a procedure call stored in a variable . | score = 0 # 1 score = newScore # 2 score = newScore + 2 # 3 avgScore = allscores(20, 60, 80) # 4 . Sequencing is Important! . Changing the order of the steps changes the overall outcome, since every time the value assigned to a variable is changed, it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables, especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 # num1 is now 4 + 6, which is 10 num2 = num1 + num3 # num2 is now (the new num1) 10 + 6, which is 16 # output: num1 = 10, num2 = 16, num3 = 6 . VS . num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 #num2 is now 8 num1 = num2 + num3 # num1 is now 14 # output: num1 = 14, num2 = 8, num3 = 6 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot, not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 #var = var1 + 5 #var2 = var1 - var3 #var1 = var2 #var3 = (var1 + var2) / 2 #var2 = 6 print(var1) print(var2) print(var3) . 9 7 2 . Hacks/Homework . Evaluate the variable &quot;result&quot;. . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueB) . 13 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) . straightbrownshort . . . Strings . What is a String? . A String: A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . Certain procedures may be used with strings and they vary from programming language to language Python examples . len() to find the length of a string . lower() to convert to lowercase . etc. Pseudocode examples . len() returns the length of a string . concat() returns a string made up of the concatenated strings ex. concat(&quot;string1&quot;, &quot;string2&quot;) would return string1string2 . substring() returns the characters from the string beginning at the at the first position to the last so an example of this would be substring (&quot;abcdefghijk&quot;, 2, 5) would print bcde (pseudocode starts at 1) . String Concatenation . What is string concatenation? . String concatenation is combining 2 or more strings to make a new strings in order to create a new string . concat() in pseudocode and varys from language to language can be used to combine to strings such as concat(&quot;cookie&quot;,&quot;monster&quot;) returns cookiemonster . Substrings . What is a substring? . A substring is a part of and already existing string. . In pseudocode substring() method is used for instance for concat(&quot;Mr.Mortenson is very handsome&quot; 1, 2) the system would return Mr (remember that pseudocode starts at 1) . Hacks . Find the result of the following problems. Then convert the pseudocode to working python code using your knowledge of python string operators. . Problem 1 . from operator import concat Noun = &quot;Mr.Mortensen&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = substring (Noun, 1, 7) yoda = concat(Adjective2, &quot;4&quot;, Adjective, &quot;6&quot;, Adjective, &quot;4&quot;, Adjective, &quot;a&quot;) display[yoda] . NameError Traceback (most recent call last) /Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb Cell 31 in &lt;cell line: 8&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; Adjective2 = &#34;Very&#34; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; Verb = &#34;is&#34; -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; abrev = substring(Noun, 1, 7) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; yoda = concat(Adjective2, &#34;4&#34;, Adjective, &#34;6&#34;, Adjective, &#34;4&#34;, Adjective, &#34;a&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; display[yoda] NameError: name &#39;substring&#39; is not defined . Problem 2 . cookie = len(&quot;choclate&quot;) cookie2 = len(&quot;rasin&quot;) len1 = cookie / 2 len2 = cookie2 * 45 vote1 = (cookie, &quot;vote&quot;, len2) vote2 = (cookie2, &quot;vote&quot;, len1) votes = concat(vote1, &quot; &quot;, vote2) display[votes] . NameError Traceback (most recent call last) /Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb Cell 33 in &lt;cell line: 7&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; vote1 = (cookie, &#34;vote&#34;, len2) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; vote2 = (cookie2, &#34;vote&#34;, len1) -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; votes = concat(vote1, &#34; &#34;, vote2) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; display[votes] NameError: name &#39;concat&#39; is not defined .",
            "url": "https://dereksol.github.io/Tera/jupyter/lesson2",
            "relUrl": "/jupyter/lesson2",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post3": {
            "title": "Variables, Assignments, and Data Abstraction",
            "content": "Variables . A variable is an abstraction inside a program that can hold a value | It organizes data by labeling it with a descriptive name | It consists of three parts: name, value, and type | Using meaningful variables names helps with readability of program code and understanding of what values are represented by the variables | . Naming Variables . Do&#39;s Don&#39;ts Why . highScore | highestScoreInTheGame | Keep it simple and easy to read, having variables that are too complicated can cause your code to become messy later on | . highScore | highscore | Differentiate the words in your variable with a capital letter. Makes things easier to read | . firstName | n | not specific enough/vague | . isRaining | is it raining | spaces are improper syntax | . phoneNumber | 555-number | dashes are improper syntax and numbers should be avoided in variable names | . Types of data Integer: A number | Text/string: A word | Boolean: Data that determines if something is true or false | . | . name = &quot;table1&quot; #string print(name, type(name)) number = 4 #integer print(number, type(number)) isAbsent = False print(isAbsent, type(isAbsent)) . table1 &lt;class &#39;str&#39;&gt; 4 &lt;class &#39;int&#39;&gt; False &lt;class &#39;bool&#39;&gt; . A list of data can also be stored in variables. Why is that useful? . print/retrieve specific values in the list without creating a lot of variables | easily remove/add/change items into the list | . colors = [&quot;red&quot;, &quot;orange&quot;, &quot;yellow&quot;] print(colors[2]) . yellow . Assignments . The assignment operator allows a program to change the value represented by a variable | Used to assigning values to variables | . Operator Description Syntax Outcome when print(a) . = | Assign value of right side of expression to left side operand | a = b | b | . += | Add right side operand with left side operand and then assign to left operand | a += b | a + b | . -= | Subtract right operand from left operand and then assign to left operand: True if both operands are equal | a -= b | a - b | . *= | Multiply right operand with left operand and then assign to left operand | a *= b | a * b | . /= | Divide left operand with right operand and then assign to left operand | a /= b | a / b | . **= | Calculate exponent(raise power) value using operands and assign value to left operand | a **= b | a ^ b | . a = 1 b = 2 a = b print(a) . The value stored in a variable will be the most recent value assigned . a = 1 b = a a = 2 print(b) . 1 . Changing Values . currentScore = 10 highScore = currentScore currentScore = 7 print(highScore) . your turn! Here are 3 problems for you to solve . num1 = 5 num2 = 9 num1 = num2 print(num1) print(num2) . num1 = 15 num2 = 25 num3 = 42 num2 = num3 num3 = num1 num1 = num2 print(num1) print(num2) print(num3) . Which of these will show the sum? . num2 += num1 print(num1) print(num2) print(str(num1)+ str(num2)) print(num1 + num2) . Data Abstraction . Method used in coding to represent data in a useful form, by taking away aspects of data that aren&#39;t being used in the situation | Variables and lists are primary tools in data abstraction | Provides a separation between the abstract properties of a data type and the concrete details of its representation | . Lists &amp; Strings . List = ordered sequence of elements | Element = individual value in a list that is assigned to a unique index | Index = a way to reference the elements in a list or string using natural numbers; each element of a string is referenced by an index | String = ordered sequence of characters (Letters, numbers, special characters) . Note: index starts at 1 for AP Exam, must be whole numbers, cannot be negative, and goes up to the number of elements in the list We can represent a list or string using a variable . | . Example of a List - Colors . Index Element . 1 | Green | . 2 | Blue | . 3 | Purple | . 4 | Pink | . At Index 1, the element is green, at index 2, the element is blue, etc. | . Managing the Complexity of a Program through Data Abstraction . Data abstractions help manage complexity in programs by giving a collection of data a name without referencing the specific details of the representation | Developing a data abstraction to use in a program can result in a program that is easier to develop and maintain | . Using Lists as Data Abstractions . What are Lists? . Allow for data abstraction | Bundle variables together | Store multiple elements | Allows multiple related items to be treated as a single value | Give one name to a set of memory cells | Can keep adding elements to it as needed | Can store elements as a single variable by using a list | . 3 Types of List Operations . Assigning values to a list at certain indices | Creating an empty list and assigning it to a variable | Assigning a copy of one list to another list (setting one list equal to another list) | 1. Assigning values to a list at certain indices . colorsList=[&quot;pink&quot;, &quot;yellow&quot;, &quot;green&quot;, &quot;blue&quot;, &quot;orange&quot;] print(colorsList) . [&#39;pink&#39;, &#39;yellow&#39;, &#39;green&#39;, &#39;blue&#39;, &#39;orange&#39;] . 2. Creating an empty list and assigning it to a variable . colorsList=[] # can be used if you want to create a list that can be filled with values later . 3. Assigning a copy of one list to another list (setting one list equal to another list) . # copy of the list is made; the list isn&#39;t sorted in place def Reverse(lst): # defining variable: lst new_lst = lst[::-1] return new_lst lst = [&quot;pink&quot;, &quot;green&quot;, &quot;purple&quot;, &quot;yellow&quot;, &quot;orange&quot;, &quot;blue&quot;, &quot;black&quot;] print(Reverse(lst)) # reverse 1st . [&#39;black&#39;, &#39;blue&#39;, &#39;orange&#39;, &#39;yellow&#39;, &#39;purple&#39;, &#39;green&#39;, &#39;pink&#39;] . What is Managing Complexity? . Improving code readability | Reducing the need for new variables as more data is collected | Can easily update data | Can easily convert data to different forms | . How do Lists Help Manage the Complexity of a Program? . Don’t need as many variables | Can easily change the number of variables | Can apply the same mathematical computation (through an algorithm) to all the elements in the list | . Data Abstraction Practice . Manage the complexity of the given code below using a list. Re-write the code segment in a less complex way, but with the same result. . color1=&quot;green&quot; color2=&quot;red&quot; color3=&quot;pink&quot; color4=&quot;purple&quot; color5=&quot;blue&quot; color6=&quot;brown&quot; print(color1) print(color2) print(color3) print(color4) print(color5) print(color6) . green red pink purple blue brown . Answer . colorList=[&quot;green&quot;, &quot;red&quot;, &quot;pink&quot;, &quot;purple&quot;, &quot;blue&quot;, &quot;brown&quot;] print(str(colorList)) . [&#39;green&#39;, &#39;red&#39;, &#39;pink&#39;, &#39;purple&#39;, &#39;blue&#39;, &#39;brown&#39;] . AP Exam Use of Data Abstraction . With the properties of the AP Exam pseudocode, lists work differently from what we&#39;ve learned in python so far, here are the two major differences: . The index does not start at 0 but 1 | There is only one method of interchanging data between lists, and that is completely overwriting previous list data with the other list n&quot;, | . Homework . You will turn in a program that utilizes lists and variables as it&#39;s primary function, options could be a quiz, a sorter, database, or wherever your imagination brings you. You will be graded on how well you understood the concepts and if you used anything other than just the simplest parts . Quiz template, if you do use it, fix the issues, and add more to it than it&#39;s current barebones state. I would recommend using it to create something related to school. . quesCount = 0 # Use a dictionary for the questions quesList = [&quot;Question1&quot;, &quot;Question2&quot;, &quot;Question3&quot;, &quot;Question4&quot;] # Use a dictionary for the correct solutions soluList = [&quot;Solution1&quot;, &quot;Solution2&quot;, &quot;Solution3&quot;, &quot;Solution4&quot;] quesAmount= len(quesList) hrm quesCount &lt;= quesAmount: print(quesList[quescount] + &quot; n&quot;) guess = input() if(guess == soluList[quesamOOuaunt]): score+=1 print(&quot;Correct! Score: &quot;) else: print(&quot;Incorrect! The correct answer was &quot; + soluList(quescount) + &quot; n&quot;) quesCount += 1 print(&quot;Final score: &quot; + str(score)) .",
            "url": "https://dereksol.github.io/Tera/lectures/2022/12/01/Studentlesson1.html",
            "relUrl": "/lectures/2022/12/01/Studentlesson1.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post4": {
            "title": "Reading Notes For Ap Gov   Derek Sol",
            "content": "8/18/22 . Forms of Government Notes: . Autocracy . One person has all the power . | Two main types: monarchy/dictatorship . | . Monarchy . king/queen rules the country . | King or queen is known as the monarch . | Come to power through family line, current kings/queens oldest child becomes next queen/king . | Olden times, Have final say over government . | Modern times, share power with other parts of government . | . Dictatorship . One leader with absolute control over the people . | Has control over things, like a constitution . | Parts of government do what the dictator wants . | . Democracy . Citizens hold power . | Two types of democracies: representative/direct . | . Representative democracy . The people elect leaders to represent them in government . | They do all the necessary things to keep the country running . | Citizens hold ultimate power, if they don’t like what their representatives do, they can vote new representatives . | . Direct democracy . No representative, people directly involved in governing the country . | Might be required to participate in lawmaking or judges . | Most modern countries too large for direct democracy to work . | . Oligarchy(oligarchy- rule by a few) . Small group of people hold all the power . | Only certain group has political rights . | Few people control the country . | Junta - small group of people (usually military officers) who rule a country after taking it by force . | Junta operates kind of like a dictatorship . | . Theocracy(theo = God) . Government that puts God or a divine being as the ultimate authority . | Religious law settles . | . 8/19/22 . Public Policy . The goals and programs our government creates and implements for society (to create order and take care of people) . | Complicated process - involves various stakes and “inputs” . | Inputs: voters, media, special interest groups(organization that are non-governmental), politicians . | . Role of Government . What should the government do? (National, state and local) . | National government - government of the U.S., federal government . | State government - governor, make a lot of rules/regulations for California, whether constitution does not discuss is left to the states . | Local government - mayor, city council, school board . | Answers varu. Ideas differ. . | We do agree on some basic things! . | . Limited government . | Rule of law . | Social contract . | Democracy . | . Tonight’s Reading Notes: Liberal &amp; Conservatives . DQ: What are some examples in which libertarians would like the government to take minimal take action? . The Ideas that Divide Us . Most Americans are united through key values (democracy, freedom, and equality) . | We are dramatically different; regilionm education geographically, and backgrounds . | This creates different opinions politically and can divide us . | . Ideologies - different belief systems . Our ideologies depend on the arguments we make to back them up . | Our debate is narrow in the U.S. compared to other countries . | No communist or socialist parties in the U.S. . | Two main ideological camps, liberals(Democratic Party) and conservatives(Republicans) . | Conservatives form a political opinon from traditional social values, distrust of government action, resistance to change, and social order . | Liberals form a political opinon from potential for progress and change, trust in government, innovations to answer societies problems, and expansion of individual rights/expression . | . The Economic Dimension . Since FDR and Great Depression, conservatives and liberals differ on how much they should trust the government . | Conservatives = not trust gov with too much power . | Liberals = willing to trust gov more to regulate economy . | Conservatives = right . | Liberals = left . | . The Social Order Dimension . People divided on how much of the government’s role should partake in controlling their lives . | Conservatives view of social order = emphasize religion in public life, no abortion/suicide, promote traditional family values(no gay marriage/rights), “American Way”(no diversity/restricting immigration), people should know their place in society, block anything that promotes the opposite of this . | Liberals view of social order = preserve environment, community of equality/protect minorites, individual safety(gun control laws) . | . The Relationship Between the Two Ideological Dimensions . Economic liberals - willing to let government make decisions about the economy and like individualistic positions in social order . Favor housing subsidies for the poor . | Taxing to support social programs . | Affirmative action . | Prefer individuals to have full freedom on noneconomic terms . | Value diversity/expanding rights to those who were left out . | . Economic conservatives - dont want government to interfere with peoples private lives and that gov should limit their role in economy too . Lessen role of decision making to relugate the market . | Eliminate unfair trade practices . | Provision of some public goods . | Open policies to immigrants . | . Libertarians - extreme holders of economic conservative views, believe that only minimal government action is necessary . Social liberals - like some government role to achieve more equal distribution of material resources and want some role in social order too . Like freedom to make individual moral choices . | Want government action for diverse and equal power structure and regulate to better health and safety . | . Communitarians - extreme of social liberalisms, strong commitment to community by equality of all people . Social conservatives - want limited government involvement economically but less forcefully than conservatives . Concern of moral life . | Emphasize funadmentalist religious values and traditional family roles(gov control of reproductive choices) . | Reject change or diversity . | Immigration is a threat, dilutes social order . | Protect moral character, like a community thatemphasizes hierarchical order over equality . | Like a large/powerful state . | . Class Discussion: . Ideologies - set of beliefs about politics and society that help us make sense of the world(parents most influence this) . U.S - 2 primary ideological camps . . Most Americans are somewhere in the middle of the political spectrum and are not extreme in their views(called moderates) . | Republican and Democrat are NOT ideologies, they are parties…it’s different! . | Many conservative and liberal political parties. R’s/D’s are just the two biggest ones in US poltiics . | . Liberals - Democrats, Green Party . Conservatives Republicans, Reform Party . Libertarians - conservative, consistent about little government intervention . 1930’s Key time period - Great Depression . -New ideas on government intervention(more of it) - more liberal . Polarization . -means being farther apart in views . -L and C are MORE polarized in recent years . Why? Lots of theories: media, social media, weak parties, a primary system with low voter turnout(mostly those more extreme), little incentive for one party to “help” the other party govern after an election . -Polarization makes compromise harder . . 8/23/22 Notes . -Vouchers . -Public education is paid for by taxpayer dollars, mostly by state taxes . -some fed gov money, but constitution says nothing about education, thats why states mainly pay for it . 8/23/22 . Media Lecture Notes . Types of Media . Print - it is hardcopy, like newspapers . Less readers of Print media . | Influential, don’t want to see newspapers die out . | More politically active . | MORE reporting . | Ex: NYT, LA Times, WAPO . | . Broadcast Media - news from the TV or radio . Where most people get there news . | Ex: ABC, CBS, NBC, CNN, etc. . | Talk radio - radio host where people come on and you interview them, not scripted, very partisan . | Internet - changed media and a lot more people need it . | Mix of sites, a lot are inaccurate . | . How Media Works . Profit, most driven by this . | They get it from advertising . | Conglomerates . | Can watch two different news station and they could actually both be owned by Disney, so should look at a variety of stations . | Professional Code of Ethics - Truthful, accuracy, etc. . | Correct themselves . | Reliable sources . | . Source Types . “On-the-record” - can be quoted, nothing has to be hidden, can use name and everything . | “On background” - dont use my name, but you can quote me, you can also give some hint as to where I work . | “On deep background” - take away more information, source is more deeply hidden, no quote directy but paraphrase allowed, can’t name person or where they work . | “Off the record” - nothing can be used, no information can come out, basically research for the reporter . | . Roles of the Media . Gatekeeper - the media can control and determine what and how long something can become a national political issue, they determine whats important to us and whats not . | Watchdog - Responsible of keeping track what the government does that might be wrong (Ex: Watergate scandal) . | Score Keeper - candidate does something or says something that is not great or good, makes politicians more careful with what they do . | Agenda Setter - similar to gatekeeper, helping the public decide what is important, whether public think is important is what the government is going to address . | . 8/24/22 . Fake News . Intential false information published as a fact . | NOT satire . | NOT an unintentional mistake . | NOT true information that you disagree with . | NOT editorial . | . How to Tell If it’s Fake News . Look at the URL - .co, .lo, .com. . | Check the “About Us” section . | Is there an address, location, staff? . | Who is the author? Do they have some credibility, Reporter? . | Check news on a factcheck site, factcheck.org or snopes.com . | Avoid provocative headlines . | Are there ridiculous statements? . | Avoid headlines or stories that use ALL CAPS . | Clickbait = “X reasons why…” . | . How to tell if it’s fake news or satire . If it sounds like a joke . | . Conspiracy theories . Conspiracy sources published unverified information that relates to known conspiracies (Aliens, Illuminati, etc.) . | Psuedoscience is similar, punlishes unverified health and scientific claim . | . Confirmation Bias . Confirmation bias leads you to believe information just because you happen to agree with and discount the parts you don’t . | Just because you think i’ts true doesn’t make it true . | If your goal is to find the truth - you need to use critical thinking skills to evaluate the validity of information . | . 8/26/22 . AP Government Current Events .",
            "url": "https://dereksol.github.io/Tera/2022/12/01/Reading-Notes-for-AP-Gov-Derek-Sol.html",
            "relUrl": "/2022/12/01/Reading-Notes-for-AP-Gov-Derek-Sol.html",
            "date": " • Dec 1, 2022"
        }
        
    
  
    
        ,"post5": {
            "title": "Conditionals",
            "content": "Focusing on Selection . Selection: uses a condition that evaluates to true or false . Selection determines which part of an algorithm are executed based on a condition being true or false . Algorithm is a finite set of instructions that accomplish a specific task . Conditional Statements . Also known as &quot;if statements&quot; . Can be seen as if statements or if blocks . . Can also be seen as if else statements or if else-blocks . . x = 20 y = 10 if x &gt; y: print(&quot;x is greater than y&quot;) . x is greater than y . x = 0 y = 10 if x &gt; y: print(&quot;x is greater than y&quot;) else: print(&quot;x is not greater than y&quot;) . x is not greater than y . Participation . -Calculate the total sum of two numbers, if it is equal to 200, print 200, if otherwise, print the sum. . num1 = num2 = sum = num1 + num2 .",
            "url": "https://dereksol.github.io/Tera/2022/11/30/presentation.html",
            "relUrl": "/2022/11/30/presentation.html",
            "date": " • Nov 30, 2022"
        }
        
    
  
    
        ,"post6": {
            "title": "Lesson Plan for 3.5-3.7",
            "content": "Monday Notes . Tuesday Notes .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%2013/2022/11/29/presentationnotes.html",
            "relUrl": "/apcsp%20week%2013/2022/11/29/presentationnotes.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post7": {
            "title": "3.6 Conditionals",
            "content": "Focusing on Selection . Selection: uses a condition that evaluates if it is true or false . . Conditional Statements . Also known as &quot;If-statements&quot; . . Can be seen as if statements or if blocks . x = 4 y = 10 if y &gt; x: print(&quot;y is greater than x&quot;) . y is greater than x . Can also be seen as if else statements or if else blocks . . x = 4 y = 10 if y &gt; x: print(&quot;y is greater than x&quot;) else: print(&quot;y is less than x&quot;) . y is greater than x .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%2014/2022/11/29/conditionspresent.html",
            "relUrl": "/apcsp%20week%2014/2022/11/29/conditionspresent.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post8": {
            "title": "3.6 Conditionals",
            "content": "Focusing on Selection . Selection: uses a condition that evaluates if it is true or false . .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%2014/2022/11/29/conditionalspresentation.html",
            "relUrl": "/apcsp%20week%2014/2022/11/29/conditionalspresentation.html",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post9": {
            "title": "Mathematical Expressions and Strings",
            "content": "What is an Algorithm? . An algorithm: a set of instructions that can accomplish a specific task. . An Algorithm Has Three Components . Sequencing: Algorithms do tasks in the order of specification. | . Selection: Helps choose two different outcomes based off a decision. | . Iteration: If a condition is true, then the code can repeat. | . Algorithms Can Be Represented in Two Ways . Flowcharts: Use shapes and arrows to represent the steps of an algorithm. | . . Pseudocode: A blend of human language and coding format. | Hacks: Jamboard Flowchart . Click on this link for a group activity . . . Arithmetic Operations . Arithmetic operations exist in most programming languages. . Basic Operations . Subtraction: . Represented by “-&quot; | . num1 = 2 - 1 . Addition: . Represented by &quot;+&quot; | . num1 = 2 + 1 . Multiplication: . Represented by “*” | . num1 = 2 * 1 . Division: . Represented by “/” | . num1 = 2 / 1 . Getting the Remainder: . Represented by “MOD” (% in python) | . num1 = 5 % 2 . Different Uses . Items can be numbers or variables. . Examples: . num1 = 10 num2 = num1 - 25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . Operations in parentheses should be done first. . | Division and multiplication should be done before addition and subtraction. . | Modulus works similar to multiplication and division. . | . Example: Evaluate num1 . num1 = 9 % 2 * ( 8 - 2 ) + 8 / ( 6 - 4 ) print(num1) . 10.0 . . . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable . | Value of another variable stored in a variable . | Result of an operation stored in a variable . | Result of a procedure call stored in a variable . | score = 0 # 1 score = newScore # 2 score = newScore + 2 # 3 avgScore = allscores(20, 60, 80) # 4 . Sequencing is Important! . Changing the order of the steps changes the overall outcome, since every time the value assigned to a variable is changed, it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables, especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 # num1 is now 4 + 6, which is 10 num2 = num1 + num3 # num2 is now (the new num1) 10 + 6, which is 16 # output: num1 = 10, num2 = 16, num3 = 6 . VS . num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 #num2 is now 8 num1 = num2 + num3 # num1 is now 14 # output: num1 = 14, num2 = 8, num3 = 6 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot, not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 #var = var1 + 5 #var2 = var1 - var3 #var1 = var2 #var3 = (var1 + var2) / 2 #var2 = 6 print(var1) print(var2) print(var3) . 9 7 2 . Hacks/Homework . Evaluate the variable &quot;result&quot;. . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueB) . 13 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) . straightbrownshort . . . Strings . What is a String? . A String: A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . Certain procedures may be used with strings and they vary from programming language to language Python examples . len() to find the length of a string . lower() to convert to lowercase . etc. Pseudocode examples . len() returns the length of a string . concat() returns a string made up of the concatenated strings ex. concat(&quot;string1&quot;, &quot;string2&quot;) would return string1string2 . substring() returns the characters from the string beginning at the at the first position to the last so an example of this would be substring (&quot;abcdefghijk&quot;, 2, 5) would print bcde (pseudocode starts at 1) . String Concatenation . What is string concatenation? . String concatenation is combining 2 or more strings to make a new strings in order to create a new string . concat() in pseudocode and varys from language to language can be used to combine to strings such as concat(&quot;cookie&quot;,&quot;monster&quot;) returns cookiemonster . Substrings . What is a substring? . A substring is a part of and already existing string. . In pseudocode substring() method is used for instance for concat(&quot;Mr.Mortenson is very handsome&quot; 1, 2) the system would return Mr (remember that pseudocode starts at 1) . Hacks . Find the result of the following problems. Then convert the pseudocode to working python code using your knowledge of python string operators. . Problem 1 . from operator import concat Noun = &quot;Mr.Mortensen&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = substring (Noun, 1, 7) yoda = concat(Adjective2, &quot;4&quot;, Adjective, &quot;6&quot;, Adjective, &quot;4&quot;, Adjective, &quot;a&quot;) display[yoda] . NameError Traceback (most recent call last) /Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb Cell 31 in &lt;cell line: 8&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; Adjective2 = &#34;Very&#34; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; Verb = &#34;is&#34; -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; abrev = substring(Noun, 1, 7) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; yoda = concat(Adjective2, &#34;4&#34;, Adjective, &#34;6&#34;, Adjective, &#34;4&#34;, Adjective, &#34;a&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; display[yoda] NameError: name &#39;substring&#39; is not defined . Problem 2 . cookie = len(&quot;choclate&quot;) cookie2 = len(&quot;rasin&quot;) len1 = cookie / 2 len2 = cookie2 * 45 vote1 = (cookie, &quot;vote&quot;, len2) vote2 = (cookie2, &quot;vote&quot;, len1) votes = concat(vote1, &quot; &quot;, vote2) display[votes] . NameError Traceback (most recent call last) /Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb Cell 33 in &lt;cell line: 7&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; vote1 = (cookie, &#34;vote&#34;, len2) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; vote2 = (cookie2, &#34;vote&#34;, len1) -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; votes = concat(vote1, &#34; &#34;, vote2) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; display[votes] NameError: name &#39;concat&#39; is not defined .",
            "url": "https://dereksol.github.io/Tera/jupyter/lesson2",
            "relUrl": "/jupyter/lesson2",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post10": {
            "title": "Mathematical Expressions and Strings",
            "content": "What is an Algorithm? . An algorithm: a set of instructions that can accomplish a specific task. . An Algorithm Has Three Components . Sequencing: Algorithms do tasks in the order of specification. | . Selection: Helps choose two different outcomes based off a decision. | . Iteration: If a condition is true, then the code can repeat. | . Algorithms Can Be Represented in Two Ways . Flowcharts: Use shapes and arrows to represent the steps of an algorithm. | . . Pseudocode: A blend of human language and coding format. | Hacks: Jamboard Flowchart . Click on this link for a group activity . . . Arithmetic Operations . Arithmetic operations exist in most programming languages. . Basic Operations . Subtraction: . Represented by “-&quot; | . num1 = 2 - 1 . Addition: . Represented by &quot;+&quot; | . num1 = 2 + 1 . Multiplication: . Represented by “*” | . num1 = 2 * 1 . Division: . Represented by “/” | . num1 = 2 / 1 . Getting the Remainder: . Represented by “MOD” (% in python) | . num1 = 5 % 2 . Different Uses . Items can be numbers or variables. . Examples: . num1 = 10 num2 = num1 - 25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . Operations in parentheses should be done first. . | Division and multiplication should be done before addition and subtraction. . | Modulus works similar to multiplication and division. . | . Example: Evaluate num1 . num1 = 9 % 2 * ( 8 - 2 ) + 8 / ( 6 - 4 ) print(num1) . 10.0 . . . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable . | Value of another variable stored in a variable . | Result of an operation stored in a variable . | Result of a procedure call stored in a variable . | score = 0 # 1 score = newScore # 2 score = newScore + 2 # 3 avgScore = allscores(20, 60, 80) # 4 . Sequencing is Important! . Changing the order of the steps changes the overall outcome, since every time the value assigned to a variable is changed, it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables, especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 # num1 is now 4 + 6, which is 10 num2 = num1 + num3 # num2 is now (the new num1) 10 + 6, which is 16 # output: num1 = 10, num2 = 16, num3 = 6 . VS . num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 #num2 is now 8 num1 = num2 + num3 # num1 is now 14 # output: num1 = 14, num2 = 8, num3 = 6 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot, not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 #var = var1 + 5 #var2 = var1 - var3 #var1 = var2 #var3 = (var1 + var2) / 2 #var2 = 6 print(var1) print(var2) print(var3) . 9 7 2 . Hacks/Homework . Evaluate the variable &quot;result&quot;. . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueB) . 13 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) . straightbrownshort . . . Strings . What is a String? . A String: A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . Certain procedures may be used with strings and they vary from programming language to language Python examples . len() to find the length of a string . lower() to convert to lowercase . etc. Pseudocode examples . len() returns the length of a string . concat() returns a string made up of the concatenated strings ex. concat(&quot;string1&quot;, &quot;string2&quot;) would return string1string2 . substring() returns the characters from the string beginning at the at the first position to the last so an example of this would be substring (&quot;abcdefghijk&quot;, 2, 5) would print bcde (pseudocode starts at 1) . String Concatenation . What is string concatenation? . String concatenation is combining 2 or more strings to make a new strings in order to create a new string . concat() in pseudocode and varys from language to language can be used to combine to strings such as concat(&quot;cookie&quot;,&quot;monster&quot;) returns cookiemonster . Substrings . What is a substring? . A substring is a part of and already existing string. . In pseudocode substring() method is used for instance for concat(&quot;Mr.Mortenson is very handsome&quot; 1, 2) the system would return Mr (remember that pseudocode starts at 1) . Hacks . Find the result of the following problems. Then convert the pseudocode to working python code using your knowledge of python string operators. . Problem 1 . from operator import concat Noun = &quot;Mr.Mortensen&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = substring (Noun, 1, 7) yoda = concat(Adjective2, &quot;4&quot;, Adjective, &quot;6&quot;, Adjective, &quot;4&quot;, Adjective, &quot;a&quot;) display[yoda] . NameError Traceback (most recent call last) /Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb Cell 31 in &lt;cell line: 8&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; Adjective2 = &#34;Very&#34; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; Verb = &#34;is&#34; -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; abrev = substring(Noun, 1, 7) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; yoda = concat(Adjective2, &#34;4&#34;, Adjective, &#34;6&#34;, Adjective, &#34;4&#34;, Adjective, &#34;a&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; display[yoda] NameError: name &#39;substring&#39; is not defined . Problem 2 . cookie = len(&quot;choclate&quot;) cookie2 = len(&quot;rasin&quot;) len1 = cookie / 2 len2 = cookie2 * 45 vote1 = (cookie, &quot;vote&quot;, len2) vote2 = (cookie2, &quot;vote&quot;, len1) votes = concat(vote1, &quot; &quot;, vote2) display[votes] . NameError Traceback (most recent call last) /Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb Cell 33 in &lt;cell line: 7&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; vote1 = (cookie, &#34;vote&#34;, len2) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; vote2 = (cookie2, &#34;vote&#34;, len1) -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; votes = concat(vote1, &#34; &#34;, vote2) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; display[votes] NameError: name &#39;concat&#39; is not defined .",
            "url": "https://dereksol.github.io/Tera/jupyter/lesson2",
            "relUrl": "/jupyter/lesson2",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post11": {
            "title": "Mathematical Expressions and Strings",
            "content": "What is an Algorithm? . An algorithm: a set of instructions that can accomplish a specific task. . An Algorithm Has Three Components . Sequencing: Algorithms do tasks in the order of specification. | . Selection: Helps choose two different outcomes based off a decision. | . Iteration: If a condition is true, then the code can repeat. | . Algorithms Can Be Represented in Two Ways . Flowcharts: Use shapes and arrows to represent the steps of an algorithm. | . . Pseudocode: A blend of human language and coding format. | Hacks: Jamboard Flowchart . Click on this link for a group activity . . . Arithmetic Operations . Arithmetic operations exist in most programming languages. . Basic Operations . Subtraction: . Represented by “-&quot; | . num1 = 2 - 1 . Addition: . Represented by &quot;+&quot; | . num1 = 2 + 1 . Multiplication: . Represented by “*” | . num1 = 2 * 1 . Division: . Represented by “/” | . num1 = 2 / 1 . Getting the Remainder: . Represented by “MOD” (% in python) | . num1 = 5 % 2 . Different Uses . Items can be numbers or variables. . Examples: . num1 = 10 num2 = num1 - 25 num3 = 100 * num1 num4 = num1 / num2 num5 = 9 % num4 . Order of Operations . Arithmetic operations in programming are performed in the same order as operations in mathematics: . Operations in parentheses should be done first. . | Division and multiplication should be done before addition and subtraction. . | Modulus works similar to multiplication and division. . | . Example: Evaluate num1 . num1 = 9 % 2 * ( 8 - 2 ) + 8 / ( 6 - 4 ) print(num1) . 10.0 . . . Variables . Different Ways Values are Stored in Variables . Numerical value stored in a variable . | Value of another variable stored in a variable . | Result of an operation stored in a variable . | Result of a procedure call stored in a variable . | score = 0 # 1 score = newScore # 2 score = newScore + 2 # 3 avgScore = allscores(20, 60, 80) # 4 . Sequencing is Important! . Changing the order of the steps changes the overall outcome, since every time the value assigned to a variable is changed, it overrides the last value which was assigned to the same variable. That is why it is important to track the value of variables, especially in code where the value is constantly changing. . num1 = 2 num2 = 4 num3 = 6 num1 = num2 + num3 # num1 is now 4 + 6, which is 10 num2 = num1 + num3 # num2 is now (the new num1) 10 + 6, which is 16 # output: num1 = 10, num2 = 16, num3 = 6 . VS . num1 = 2 num2 = 4 num3 = 6 num2 = num1 + num3 #num2 is now 8 num1 = num2 + num3 # num1 is now 14 # output: num1 = 14, num2 = 8, num3 = 6 . Tracking Variables . Tracking variables is a common question found on AP exams and is an important thing to keep in mind when writing any code. If the value of your variables changes a lot, not accounting for these changes can result in an unwanted outcome. . var1 = 9 var2 = 7 var3 = 2 #var = var1 + 5 #var2 = var1 - var3 #var1 = var2 #var3 = (var1 + var2) / 2 #var2 = 6 print(var1) print(var2) print(var3) . 9 7 2 . Hacks/Homework . Evaluate the variable &quot;result&quot;. . Num1 = 50 Num2 = Num1 % 9 + 15 Num3 = Num2 / Num1 + ( Num2 * 2 ) Num4 = Num3 + Num1 / 5 - 10 Result = Num4 - Num2 . Num1 = 10 Num2 = Num1 % 3 * 4 Num1 = Num2 Num3 = Num1 * 3 Result = Num3 % 2 . valueA = 4 valueB = 90 valueC = 17 valueB = valueC - valueA valueA = valueA * 10 if valueB &gt; 10: print(valueB) . 13 . type = &quot;curly&quot; color = &quot;brown&quot; length = &quot;short&quot; type = &quot;straight&quot; hair = type + color + length print(hair) . straightbrownshort . . . Strings . What is a String? . A String: A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . A string is a collection of characters. What is a character as character can be anything from numbers, letters, spaces, special symbols, etc. . Certain procedures may be used with strings and they vary from programming language to language Python examples . len() to find the length of a string . lower() to convert to lowercase . etc. Pseudocode examples . len() returns the length of a string . concat() returns a string made up of the concatenated strings ex. concat(&quot;string1&quot;, &quot;string2&quot;) would return string1string2 . substring() returns the characters from the string beginning at the at the first position to the last so an example of this would be substring (&quot;abcdefghijk&quot;, 2, 5) would print bcde (pseudocode starts at 1) . String Concatenation . What is string concatenation? . String concatenation is combining 2 or more strings to make a new strings in order to create a new string . concat() in pseudocode and varys from language to language can be used to combine to strings such as concat(&quot;cookie&quot;,&quot;monster&quot;) returns cookiemonster . Substrings . What is a substring? . A substring is a part of and already existing string. . In pseudocode substring() method is used for instance for concat(&quot;Mr.Mortenson is very handsome&quot; 1, 2) the system would return Mr (remember that pseudocode starts at 1) . Hacks . Find the result of the following problems. Then convert the pseudocode to working python code using your knowledge of python string operators. . Problem 1 . from operator import concat Noun = &quot;Mr.Mortensen&quot; Adjective = &quot;handsome&quot; Adjective2 = &quot;Very&quot; Verb = &quot;is&quot; abrev = substring (Noun, 1, 7) yoda = concat(Adjective2, &quot;4&quot;, Adjective, &quot;6&quot;, Adjective, &quot;4&quot;, Adjective, &quot;a&quot;) display[yoda] . NameError Traceback (most recent call last) /Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb Cell 31 in &lt;cell line: 8&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; Adjective2 = &#34;Very&#34; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; Verb = &#34;is&#34; -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; abrev = substring(Noun, 1, 7) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=8&#39;&gt;9&lt;/a&gt; yoda = concat(Adjective2, &#34;4&#34;, Adjective, &#34;6&#34;, Adjective, &#34;4&#34;, Adjective, &#34;a&#34;) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X42sZmlsZQ%3D%3D?line=9&#39;&gt;10&lt;/a&gt; display[yoda] NameError: name &#39;substring&#39; is not defined . Problem 2 . cookie = len(&quot;choclate&quot;) cookie2 = len(&quot;rasin&quot;) len1 = cookie / 2 len2 = cookie2 * 45 vote1 = (cookie, &quot;vote&quot;, len2) vote2 = (cookie2, &quot;vote&quot;, len1) votes = concat(vote1, &quot; &quot;, vote2) display[votes] . NameError Traceback (most recent call last) /Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb Cell 33 in &lt;cell line: 7&gt;() &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=4&#39;&gt;5&lt;/a&gt; vote1 = (cookie, &#34;vote&#34;, len2) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=5&#39;&gt;6&lt;/a&gt; vote2 = (cookie2, &#34;vote&#34;, len1) -&gt; &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=6&#39;&gt;7&lt;/a&gt; votes = concat(vote1, &#34; &#34;, vote2) &lt;a href=&#39;vscode-notebook-cell:/Users/dmsol/Tera/_notebooks/2022-11-29-LessonDay2Hacks.ipynb#X44sZmlsZQ%3D%3D?line=7&#39;&gt;8&lt;/a&gt; display[votes] NameError: name &#39;concat&#39; is not defined .",
            "url": "https://dereksol.github.io/Tera/jupyter/lesson2",
            "relUrl": "/jupyter/lesson2",
            "date": " • Nov 29, 2022"
        }
        
    
  
    
        ,"post12": {
            "title": "Lesson Plan for 3.5-3.7",
            "content": "Notes on my Section of Teaching Hello . 3.6: Daily Video 1 Notes . Learning how to express an algorithm that uses selection without using a programming language, such as flowcharts and pseudo code | Selection determines which part of an algorithm are executed based on a condition being true or false | Algorithm is a finite set of instructions that accomplish a specific task | Consists of combinations of sequencing, selection, and iteration | Selection allows us to choose different outcomes based off of the result of a decision or condition | Can write an algorithm to update a high score for example | 1.Set highScore to 10 | 2.Get currentScore from user | Using selection, 3. If currentScore is greater than highScore, set highScore to currentScore | 4.If not, Display highScore | . 3.6: Daily Video 2 Notes . Learn how to write conditional statements | Conditional statements, also known as “if-statements,” affect the sequential flow of control by executing different statements based on the value of a Boolean expression | Can write them as if blocks or if else blocks | If condition is true, whatever statement is in the block of statements is done | IF ELSE, two outcomes, IF is just one particular outcome | First get input from the user, IF statement will take the Boolean expression and put it in the parentheses or the block associated for the IF | IF it is true, displays the number | Display goodbye outside of if statement so it says goodbye whether or not the outcome of IF is true or else | Represent these algorithms that have selection by writing conditional statements, these allow us to alter the outcome based off of a Boolean expression, can do IF ELSE statements to have two different outcomes | . 3.6: Daily Video 3 Notes . Learn how to determine the result of conditional statements | Conditional statements alter the flow of execution in our program, can do this using IF blocks, or we can do IF ELSE blocks to choose from two different outcomes | ELSE only executes if the IF condition is false | IF statements allow us to perform specific action based off the condition being true or false | . Lesson Plan Idea . PearDeck encapsulating 3.5-3.7 | Each one of us is responsible for teaching a section, since there is only three sections, two of us will work together to teach the same section | Ethan and I will be responsible for teaching 3.6, which is Conditionals | On the PearDeck, there will be visuals on slides to support our teaching, and is a more interactive form of a presentation to keep them engaged | We will put flow charts and images of code relating to conditionals, like IF blocks and IF ELSE blocks, and definitions of what algorithms and selection means | Plan to teach for about 10 minutes on this section | Afterward, have them go through 3 questions relating to this conditionals section, thinking one question could be putting a specific example of an IF statement and having them determine the outcome | Maybe question where you are given a scenario and have to show me how you would build this conditional statement on VSCode | First person to get these questions right can be rewarded with candy | At the end, we could give them independent work time to create an IF statement and and IF ELSE statement in VSCode as homework | .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%2013/2022/11/17/Lessonplan.html",
            "relUrl": "/apcsp%20week%2013/2022/11/17/Lessonplan.html",
            "date": " • Nov 17, 2022"
        }
        
    
  
    
        ,"post13": {
            "title": "Binary Math",
            "content": "Binary Math with Conversions . Plus Binary Octal Hexadecimal Decimal Minus . +1 | 00000000 | 0 | 0 | 0 | -1 | . Turn on | Turn on | Turn on | . | | | . 4 2 1 .",
            "url": "https://dereksol.github.io/Tera/frontend/binary",
            "relUrl": "/frontend/binary",
            "date": " • Nov 5, 2022"
        }
        
    
  
    
        ,"post14": {
            "title": "N@TM Individual Blog",
            "content": ". Classes I Visited . I visited many classes for the night of the Museum such as 3D Computer Animation, Ceramics, and Photography. The class that this picture is from is Ceramics. This was one of the projects where you had to make a teacup or teapot, and it was up to you to decide what you wanted it to look like. This person decided to incorporate an octopus onto the cup by attaching tentacles all over it. Something I really liked about this project is the texture of the tentacles and how the barnacles look and felt so real. This is another picture from Ceramics. One of the projects was to make whatever you wanted using all the previous projects as inspiration. This person made a plate and a mug that were both M&amp;M themed, and this plate was the orange M&amp;M. I really like the theme that he went with and the execution of the logo. . Ideas for Next Trimester . Our project came out pretty solid, however there was a lot more things that I wanted to add for improvement. I really wanted to add a dropdown menu, but was very hard for me to make and find a tutorial that I found helpful. As the Frontend Developer, I did a decent job at making the website look aesthetically appealing, however I wish I could have done and learned a lot more styles to make everything look better. One big takeaway from this project was to have better time management as a group, because if we split the work up more evenly and throughout more days, our project could have reached a higher potential and outcome. .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%2012/2022/11/04/N@TMblog.html",
            "relUrl": "/apcsp%20week%2012/2022/11/04/N@TMblog.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post15": {
            "title": "Individual Trimester 1 Final Blog",
            "content": "Questions that I missed . 6. Loop terminates when count exceeds max, so only values less than or equal to max are printed. . 8. The procedure does not interchange the values of j and k. Rather, it returns a new list with the values at indices j and k interchanged. . 11. Wasn’t too sure on this question and confused. The inner loop iterates from index j + 1 to the end of the list, so each element is only compared with the elements that follow it. . 14. When numCorrect is 9, the condition numCorrect &gt; 7 evaluates to true and the condition numCorrect ≥ 9 evaluates to true. Therefore “check plus” is displayed as intended. . 16. Thought that it was only broken up into two packets but there are many more. Messages are broken into as many packets as are needed to transmit the data. Each packet contains both data and metadata. . 21. Statement I is true because strings of characters can be represented by sequences of bits. . 22. Confused on binary numbers a bit. Binary 0110 is equivalent to 22+21, or decimal 6. . 29. Switched my answers at the very end from the right one to the wrong one. Input data can be stored as any data type. Programming languages do not typically store input data in a list for record-keeping purposes. . 32. The last assignment statement assigns a copy of myList to yourList, rather than appending one list to the other. . 34. The code segment initializes the three lists, and then swaps the contents of firstList and secondList rather than appending one list to the other. . 35. Didn’t know if the MaxPs 50 goes before or after. . 36. This would be the correct solution if i were initialized to 2 instead of 1. This code segment will generate the list [1, 3, 5, 7, 9, 11, 13, 15, 17, 19]. . 37. Confused on what temp means. A temporary variable is needed to interchange the values of two variables. . 39. List indices are typically nonnegative integers, so a decimal number between two integers would be considered an invalid index. . 41. This is the initial value of p. None of the variables has the value 10 after executing the code segment. . 42. After initially assigning values to the variables, the code segment assigns the value 4 to num3 and assigns the value 8 to num1. The value of sum at the end of the code segment is 8 + 4 + 4, or 16. . 43. This is the value of x after the code segment is executed, not the value of result. . 45. The code segment iterates through each element in the list, incrementing count1 for each positive value and incrementing count2 otherwise. There are only two positive values in the list, not five. . 46. The fourth statement assigns the value of second (which is true) to first. . 48. The value of y is initially 50, but its value is changed to 75 in the fifth statement. . 49. Switched answers last second. This code segment produces the string “onno”. . 50. Overall confused on how to attack this question. Took my best guess on this one. .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%2012/2022/11/04/IndividualTri1Final.html",
            "relUrl": "/apcsp%20week%2012/2022/11/04/IndividualTri1Final.html",
            "date": " • Nov 4, 2022"
        }
        
    
  
    
        ,"post16": {
            "title": "AP Prep Multiple Choice 2",
            "content": "1.4 Identifying and Correcting Errors Quiz . . 1.5 The Internet Quiz . . After looking over the questions that I got wrong, I realized why my answers were wrong and why the right ones fit better. Overall, a little bit of trouble with this week’s quizzes, but learned more than I knew before. .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%207/2022/10/09/APPrep2.html",
            "relUrl": "/apcsp%20week%207/2022/10/09/APPrep2.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post17": {
            "title": "Application Programming Interface (API)",
            "content": "Covid19 RapidAPI Example . &quot;&quot;&quot; Requests is a HTTP library for the Python programming language. The goal of the project is to make HTTP requests simpler and more human-friendly. &quot;&quot;&quot; import requests url = &quot;https://corona-virus-world-and-india-data.p.rapidapi.com/api&quot; headers = { &quot;X-RapidAPI-Key&quot;: &quot;561be3d3dcmsh26da5c03e252f9fp1d2d4fjsn25f9e92f38d8&quot;, &quot;X-RapidAPI-Host&quot;: &quot;corona-virus-world-and-india-data.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers) print(response.json) # This code looks for &quot;world data&quot; print(&quot;World Totals&quot;) world = response.json().get(&#39;world_total&#39;) # turn response to json() so we can extract &quot;world_total&quot; for key, value in world.items(): # this finds key, value pairs in country print(key, value) print() # This code looks for USA in &quot;countries_stats&quot; print(&quot;Country Totals&quot;) countries = response.json().get(&#39;countries_stat&#39;) for country in countries: # countries is a list if country[&quot;country_name&quot;] == &quot;USA&quot;: # this filters for USA for key, value in country.items(): # this finds key, value pairs in country print(key, value) . &lt;bound method Response.json of &lt;Response [200]&gt;&gt; World Totals total_cases 509,268,964 new_cases 204,268 total_deaths 6,242,509 new_deaths 630 total_recovered 461,827,849 active_cases 41,198,606 serious_critical 42,510 total_cases_per_1m_population 65,334 deaths_per_1m_population 800.9 statistic_taken_at 2022-04-24 11:18:01 Country Totals country_name USA cases 82,649,779 deaths 1,018,316 region total_recovered 80,434,925 new_deaths 0 new_cases 0 serious_critical 1,465 active_cases 1,196,538 total_cases_per_1m_population 247,080 deaths_per_1m_population 3,044 total_tests 1,000,275,726 tests_per_1m_population 2,990,303 . API For my Project . import requests url = &quot;https://basketball-data.p.rapidapi.com/tournament/teams&quot; querystring = {&quot;tournamentId&quot;:&quot;89&quot;} headers = { &quot;X-RapidAPI-Key&quot;: &quot;b731fee7a5mshf2b6608334c0b07p13bf5fjsn09fcf5df26f4&quot;, &quot;X-RapidAPI-Host&quot;: &quot;basketball-data.p.rapidapi.com&quot; } response = requests.request(&quot;GET&quot;, url, headers=headers, params=querystring) print(response.json()) . [{&#39;isNational&#39;: False, &#39;country&#39;: {&#39;name&#39;: &#39;Australia&#39;, &#39;shortName&#39;: &#39;AUS&#39;, &#39;id&#39;: 6}, &#39;name&#39;: &#39;Adelaide 36ers&#39;, &#39;shortName&#39;: &#39;ADE&#39;, &#39;mediumName&#39;: &#39;Ad. 36ers&#39;, &#39;id&#39;: 1448}, {&#39;isNational&#39;: False, &#39;country&#39;: {&#39;name&#39;: &#39;Australia&#39;, &#39;shortName&#39;: &#39;AUS&#39;, &#39;id&#39;: 6}, &#39;name&#39;: &#39;Brisbane Bullets&#39;, &#39;shortName&#39;: &#39;BRI&#39;, &#39;mediumName&#39;: &#39;B.Bullets&#39;, &#39;id&#39;: 2503}, {&#39;isNational&#39;: False, &#39;country&#39;: {&#39;name&#39;: &#39;Australia&#39;, &#39;shortName&#39;: &#39;AUS&#39;, &#39;id&#39;: 6}, &#39;name&#39;: &#39;Cairns Taipans&#39;, &#39;shortName&#39;: &#39;CTP&#39;, &#39;mediumName&#39;: &#39;C.Taipans&#39;, &#39;id&#39;: 1446}, {&#39;isNational&#39;: False, &#39;country&#39;: {&#39;name&#39;: &#39;Australia&#39;, &#39;shortName&#39;: &#39;AUS&#39;, &#39;id&#39;: 6}, &#39;name&#39;: &#39;Illawarra Hawks&#39;, &#39;shortName&#39;: &#39;ILH&#39;, &#39;mediumName&#39;: &#39;I.Hawks&#39;, &#39;id&#39;: 1443}, {&#39;isNational&#39;: False, &#39;country&#39;: {&#39;name&#39;: &#39;Australia&#39;, &#39;shortName&#39;: &#39;AUS&#39;, &#39;id&#39;: 6}, &#39;name&#39;: &#39;Melbourne United&#39;, &#39;shortName&#39;: &#39;MEL&#39;, &#39;mediumName&#39;: &#39;Melb.United&#39;, &#39;id&#39;: 1445}, {&#39;isNational&#39;: False, &#39;country&#39;: {&#39;name&#39;: &#39;Australia&#39;, &#39;shortName&#39;: &#39;AUS&#39;, &#39;id&#39;: 6}, &#39;name&#39;: &#39;New Zealand Breakers&#39;, &#39;shortName&#39;: &#39;NZB&#39;, &#39;mediumName&#39;: &#39;N.Z.Breakers&#39;, &#39;id&#39;: 1441}, {&#39;isNational&#39;: False, &#39;country&#39;: {&#39;name&#39;: &#39;Australia&#39;, &#39;shortName&#39;: &#39;AUS&#39;, &#39;id&#39;: 6}, &#39;name&#39;: &#39;Perth Wildcats&#39;, &#39;shortName&#39;: &#39;PWC&#39;, &#39;mediumName&#39;: &#39;P.Wildcats&#39;, &#39;id&#39;: 1442}, {&#39;isNational&#39;: False, &#39;country&#39;: {&#39;name&#39;: &#39;Australia&#39;, &#39;shortName&#39;: &#39;AUS&#39;, &#39;id&#39;: 6}, &#39;name&#39;: &#39;SE Melbourne Phoenix&#39;, &#39;shortName&#39;: &#39;&#39;, &#39;mediumName&#39;: &#39;&#39;, &#39;id&#39;: 3696}, {&#39;isNational&#39;: False, &#39;country&#39;: {&#39;name&#39;: &#39;Australia&#39;, &#39;shortName&#39;: &#39;AUS&#39;, &#39;id&#39;: 6}, &#39;name&#39;: &#39;Sydney Kings&#39;, &#39;shortName&#39;: &#39;SDK&#39;, &#39;mediumName&#39;: &#39;S.Kings&#39;, &#39;id&#39;: 1444}] .",
            "url": "https://dereksol.github.io/Tera/2022/10/09/PBL-python_rapidapi.html",
            "relUrl": "/2022/10/09/PBL-python_rapidapi.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post18": {
            "title": "Code Corrections",
            "content": "alphabet = &quot;abcdefghijklmnopqrstuvwxyz&quot; alphabetList = [] for i in alphabet: alphabetList.append(i) print(alphabetList) . [&#39;a&#39;, &#39;b&#39;, &#39;c&#39;, &#39;d&#39;, &#39;e&#39;, &#39;f&#39;, &#39;g&#39;, &#39;h&#39;, &#39;i&#39;, &#39;j&#39;, &#39;k&#39;, &#39;l&#39;, &#39;m&#39;, &#39;n&#39;, &#39;o&#39;, &#39;p&#39;, &#39;q&#39;, &#39;r&#39;, &#39;s&#39;, &#39;t&#39;, &#39;u&#39;, &#39;v&#39;, &#39;w&#39;, &#39;x&#39;, &#39;y&#39;, &#39;z&#39;] . letter = input(&quot;What letter would you like to check?&quot;) i = 0 while i &lt; 26: if alphabetList[i] == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(i+1) + &quot; letter in the alphabet&quot;) i += 1 . The letter z is the 26 letter in the alphabet . letter = input(&quot;What letter would you like to check?&quot;) count = 0 for i in alphabetList: if i == letter: print(&quot;The letter &quot; + letter + &quot; is the &quot; + str(count+1) + &quot; letter in the alphabet&quot;) count += 1 . The letter x is the 24 letter in the alphabet . Evens while loop . evens = [] i = 0 while i &lt;= 10: evens.append(i) i += 2 print(evens) . [0, 2, 4, 6, 8, 10] . Odds while loop . odds = [] i = 1 while i &lt;= 10: odds.append(i) i += 2 print(odds) . [1, 3, 5, 7, 9] . Evens for loop . numbers = [0,1,2,3,4,5,6,7,8,9,10] evens = [] for i in numbers: if (numbers[i] % 2 == 0): evens.append(numbers[i]) print(evens) . [0, 2, 4, 6, 8, 10] . numbers = [0,1,2,3,4,5,6,7,8,9,10] odds = [] for i in numbers: if (numbers[i] % 2 == 1): # % sign is a division sign odds.append(numbers[i]) print(odds) . [1, 3, 5, 7, 9] . Before . numbers = [] newNumbers = [] i = 0 while i &lt; 100: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 5 == 0: newNumbers.append(numbers[i]) if numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 0, 2, 4, 5, 6, 8, 10, 10, 12, 14, 15, 16, 18, 20, 20, 22, 24, 25, 26, 28, 30, 30, 32, 34, 35, 36, 38, 40, 40, 42, 44, 45, 46, 48, 50, 50, 52, 54, 55, 56, 58, 60, 60, 62, 64, 65, 66, 68, 70, 70, 72, 74, 75, 76, 78, 80, 80, 82, 84, 85, 86, 88, 90, 90, 92, 94, 95, 96, 98] . After . numbers = [] newNumbers = [] i = 0 while i &lt; 101: numbers.append(i) i += 1 for i in numbers: if numbers[i] % 10 == 5: newNumbers.append(numbers[i]) if numbers[i] % 2 == 0: newNumbers.append(numbers[i]) print(newNumbers) . [0, 2, 4, 5, 6, 8, 10, 12, 14, 15, 16, 18, 20, 22, 24, 25, 26, 28, 30, 32, 34, 35, 36, 38, 40, 42, 44, 45, 46, 48, 50, 52, 54, 55, 56, 58, 60, 62, 64, 65, 66, 68, 70, 72, 74, 75, 76, 78, 80, 82, 84, 85, 86, 88, 90, 92, 94, 95, 96, 98, 100] . Before . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} total = 0 #shows the user the menu and prompts them to select an item print(&quot;Menu&quot;) for k,v in menu.items(): print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times item = input(&quot;Please select an item from the menu&quot;) #code should add the price of the menu items selected by the user print(total) . Menu burger $3.99 fries $1.99 drink $0.99 0 . After . menu = {&quot;burger&quot;: 3.99, &quot;fries&quot;: 1.99, &quot;drink&quot;: 0.99} # use of dictionary total = 0 #shows the user the menu and prompts them to select an item print(&quot;Derek&#39;s Restaurant Menu&quot;) for k,v in menu.items(): # &quot;k&quot; is the item name, &quot;v&quot; is the price. &quot;k&quot; stands for key and &quot;v&quot; stands for value. print(k + &quot; $&quot; + str(v)) #why does v have &quot;str&quot; in front of it? #ideally the code should prompt the user multiple times print(&quot;Please select items from the menu. Once you are done selecting items, type &#39;done&#39;&quot;) while True: # Loop continuously inp = input() # Get the input if inp == &quot;burger&quot;: # input for burger print(&quot;1 burger: $3.99&quot;) total = total + 3.99 elif inp == &quot;fries&quot;: # input for fries print(&quot;1 fries: $1.99&quot;) total = total + 1.99 elif inp == &quot;drink&quot;: # input for a drink print(&quot;1 drink: $0.99&quot;) total = total + 0.99 elif inp == &quot;done&quot;: # input for completing the order break # stop asking the user for inputs # print the total order cost print(&quot;Your total is $&quot; + str(total)) . Derek&#39;s Restaurant Menu burger $3.99 fries $1.99 drink $0.99 Please select items from the menu. Once you are done selecting items, type &#39;done&#39; 1 burger: $3.99 1 drink: $0.99 Your total is $4.98 .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%207/2022/10/09/CodeCorrections.html",
            "relUrl": "/apcsp%20week%207/2022/10/09/CodeCorrections.html",
            "date": " • Oct 9, 2022"
        }
        
    
  
    
        ,"post19": {
            "title": "AP Prep Multiple Choice",
            "content": "1.1 Collaboration Notes . Daily Video 1 . Innovations are improved through collaboration in CSP | A computing innovation includes a program as an integral part of its function | Effective collaboration skills: Communication, consensus building, conflict resolution, negotiation | Computing innovation: reflects the diversity of talents and unique perspectives of all the programers who worked to create it | Collaboration on projects can reduce bias since there are various perspectives Video Quiz: Daily Video 2 . | How computing innovations are developed by groups of people | Consultation and communication between peers is important | Information contributed from all the group members can help understand the purpose of the program and create one that incorporates all the perspectives | Online tools can help collaboration such as pair programming | Pair programming: work together in pairs- the driver writes the code, the navigator reviews it | Think pair share: students work through a problem alone then pair with a partner then share with class | It is important to give credit 1.1 Collaboration Quiz . . 1.2 Program Function and Purpose Notes . Daily Video 1 . | It is important to know and be able to describe the purpose of a computing innovation | The purpose could be to solve problems, pursue interests through creative expression, etc. | Truly understanding the purpose of a program helps the developer(s) develop the program better Daily Video 2 . | Identify inputs/outputs to a program | Program inputs are data sent to a computer for processing by a program. Some forms can be: tactile, audio, visual, text | An event is associated with an action and supplies input data to a program | Events can be generated when a key is pressed, a mouse clicked, etc. Can be any defined action that affects the flow of execution | Inputs generally affect the output of a program | In a program, the code is made in a way that after an action, the code “jumps” to the code segment according to the event | Program’s output is based off input or prior state Daily Video 3 . | A program (software) is a collection of program statements the performs a specific task when run by a computer. | A code segment is a collection of program statements that is a part of a program | Software needs to work for a variety of inputs | The behavior is how the program functions during execution and if often described by how a user can interact with it. | Can be described broadly by what it does or in detail on how the program accomplishes its function | A program is a collection of statements: A statement is a single command, a group of statements is a code segment, code segments are executed -&gt; a program/software 1.2 Program Function and Purpose Quiz . . 1.3 Program Design and Development Notes . Daily Video 1 . | Use a development process to develop a program | Design a program and its user interface | A development process can be ordered and intentional or exploratory in nature | Common phases when developing a program: investigating and reflecting, designing, prototyping, testing | Requires refinement and revision based on feedback, testing, and reflection: may require revisiting phases | Break the project into smaller pieces and make sure each piece works before adding it to the whole | Investigate to determine requirements, constraints, concerns and interests of customer | Investigate by: collecting data through surveys, user testing, interviews, direct observations | Requirements describe how a program functions and may include a description of user interactions that a program should provide | Design phase that outlines how to accomplish a program’s goal may include: brainstorming, planning/storyboarding, organizing the program into modules and functional components, creation of diagrams, develop testing strategy | Constantly test your program Daily Video 2 . | When developing a program, it is important to cite and acknowledge code segments used from either another source or developed collaboratively | When acknowledging someone else, include the origin of code or authors name in the program documentation | Team of people usually work on a program by each focusing on different functional components | Each member’s work should be credited in program documentation Sometimes credit is given with comments in the code | Many developers use code segments, procedures, algorithms made by others who aren’t part of the project so it is important to credit them Daily Video 3 . | Describe the purpose of a code segment or program by writing documentation | Program documentation: a written description of the function of a code segment, event, procedure, or program and how it was developed EX: comments (don’t effect how the program runs) | Should actively document throughout development to help development as well as maintaining correct programs | Program documentation created to: describe the program, list specifications, describe different parts of the program, list of contributors | Document process: beginning: list specifications, during: keep track of progress, after: explain overall process | Documentation improves: programming process efficiency, ability to test and refine program, responding to bugs 1.3 Program Design and Development Quiz . . | . Questions I still have with problem sets . I found this question to be the most difficult for me throughout all of 1.1-1.3. After looking over the correct answer and explanation, it makes more sense however is still a little confusing to me. .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%206/2022/10/02/APPrep.html",
            "relUrl": "/apcsp%20week%206/2022/10/02/APPrep.html",
            "date": " • Oct 2, 2022"
        }
        
    
  
    
        ,"post20": {
            "title": "Java Script Tutorial",
            "content": "console.log(&quot;Hello, World!&quot;); . Hello, World! . var msg = &quot;Hello, World!&quot;; console.log(msg); . Hello, World! . function logIt(output) { console.log(output); } logIt(msg); . Hello, World! . console.log(&quot;Reuse of logIT&quot;) logIt(&quot;Hello, Students!&quot;); logIt(2022) . Reuse of logIT Hello, Students! 2022 . function logItType(output) { console.log(typeof output, &quot;;&quot;, output); } console.log(&quot;Looking at dynamic nature of types in JavaScript&quot;) logItType(&quot;hello&quot;); // String logItType(2020); // Number logItType(&quot;compscirole&quot;); // String logItType([1, 2, 3, 4]); // Object is generic for this Array, which similar to Python List . Looking at dynamic nature of types in JavaScript string ; hello number ; 2020 string ; compscirole object ; [ 1, 2, 3, 4 ] . // define a function to hold data for a Person function Person(name, ghID, classOf, compscirole) { this.name = name; this.ghID = ghID; this.classOf = classOf; this.compscirole = compscirole; this.role = &quot;&quot;; } // define a setter for role in Person data Person.prototype.setRole = function(role) { this.role = role; } // define a JSON conversion &quot;method&quot; associated with Person Person.prototype.toJSON = function() { const obj = {name: this.name, ghID: this.ghID, classOf: this.classOf, role: this.role}; const json = JSON.stringify(obj); return json; } // make a new Person and assign to variable teacher var teacher = new Person(&quot;Mr M&quot;, &quot;jm1021&quot;, 1977, &quot;Headmaster&quot;); // object type is easy to work with in JavaScript logItType(teacher); // before role logItType(teacher.toJSON()); // ok to do this even though role is not yet defined // output of Object and JSON/string associated with Teacher teacher.setRole(&quot;Teacher&quot;); // set the role logItType(teacher); logItType(teacher.toJSON()); . object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, compscirole: &#39;Headmaster&#39;, role: &#39;&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;&#34;} object ; Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, compscirole: &#39;Headmaster&#39;, role: &#39;Teacher&#39; } string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} . // define a student Array of Person(s) var students = [ new Person(&quot;Derek&quot;, &quot;Senior&quot;, 2023, &quot;Front-end Developer&quot;), new Person(&quot;Saavan&quot;, &quot;Senior&quot;, 2023, &quot;DevOps&quot;), new Person(&quot;Rohan&quot;, &quot;Senior&quot;, 2023, &quot;Back-end Developer&quot;), new Person(&quot;Dillon&quot;, &quot;Junior&quot;, 2024, &quot;Scrum Master&quot;), ]; // define a classroom and build Classroom objects and json function Classroom(teacher, students){ // 1 teacher, many student // start Classroom with Teacher teacher.setRole(&quot;Teacher&quot;); this.teacher = teacher; this.classroom = [teacher]; // add each Student to Classroom this.students = students; this.students.forEach(student =&gt; { student.setRole(&quot;Student&quot;); this.classroom.push(student); }); // build json/string format of Classroom this.json = []; this.classroom.forEach(person =&gt; this.json.push(person.toJSON())); } // make a CompSci classroom from formerly defined teacher and students compsci = new Classroom(teacher, students); // output of Objects and JSON in CompSci classroom logItType(compsci.classroom); // constructed classroom object logItType(compsci.classroom[0].name); // abstract 1st objects name logItType(compsci.json[0]); // show json conversion of 1st object to string logItType(JSON.parse(compsci.json[0])); // show JSON.parse inverse of JSON.stringify . object ; [ Person { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, compscirole: &#39;Headmaster&#39;, role: &#39;Teacher&#39; }, Person { name: &#39;Derek&#39;, ghID: &#39;Senior&#39;, classOf: 2023, compscirole: &#39;Front-end Developer&#39;, role: &#39;Student&#39; }, Person { name: &#39;Saavan&#39;, ghID: &#39;Senior&#39;, classOf: 2023, compscirole: &#39;DevOps&#39;, role: &#39;Student&#39; }, Person { name: &#39;Rohan&#39;, ghID: &#39;Senior&#39;, classOf: 2023, compscirole: &#39;Back-end Developer&#39;, role: &#39;Student&#39; }, Person { name: &#39;Dillon&#39;, ghID: &#39;Junior&#39;, classOf: 2024, compscirole: &#39;Scrum Master&#39;, role: &#39;Student&#39; } ] string ; Mr M string ; {&#34;name&#34;:&#34;Mr M&#34;,&#34;ghID&#34;:&#34;jm1021&#34;,&#34;classOf&#34;:1977,&#34;role&#34;:&#34;Teacher&#34;} object ; { name: &#39;Mr M&#39;, ghID: &#39;jm1021&#39;, classOf: 1977, role: &#39;Teacher&#39; } . // define an HTML conversion &quot;method&quot; associated with Classroom Classroom.prototype._toHtml = function() { // HTML Style is build using inline structure var style = ( &quot;display:inline-block;&quot; + &quot;border: 2px solid grey;&quot; + &quot;box-shadow: 0.8em 0.4em 0.4em grey;&quot; ); // HTML Body of Table is build as a series of concatenations (+=) var body = &quot;&quot;; // Heading for Array Columns body += &quot;&lt;tr&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Name&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Grade&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Class Of&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;th&gt;&lt;mark&gt;&quot; + &quot;Comp Sci Role&quot; + &quot;&lt;/mark&gt;&lt;/th&gt;&quot;; body += &quot;&lt;/tr&gt;&quot;; // Data of Array, iterate through each row of compsci.classroom for (var row of compsci.classroom) { // tr for each row, a new line body += &quot;&lt;tr&gt;&quot;; // td for each column of data body += &quot;&lt;td&gt;&quot; + row.name + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.ghID + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.classOf + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.role + &quot;&lt;/td&gt;&quot;; body += &quot;&lt;td&gt;&quot; + row.compscirole + &quot;&lt;/td&gt;&quot;; // tr to end line body += &quot;&lt;tr&gt;&quot;; } // Build and HTML fragment of div, table, table body return ( &quot;&lt;div style=&#39;&quot; + style + &quot;&#39;&gt;&quot; + &quot;&lt;table&gt;&quot; + body + &quot;&lt;/table&gt;&quot; + &quot;&lt;/div&gt;&quot; ); }; // IJavaScript HTML processor receive parameter of defined HTML fragment $$.html(compsci._toHtml()); . NameGradeClass OfRoleComp Sci Role . Mr M | jm1021 | 1977 | Teacher | Headmaster | Derek | Senior | 2023 | Student | Front-end Developer | Saavan | Senior | 2023 | Student | DevOps | Rohan | Senior | 2023 | Student | Back-end Developer | Dillon | Junior | 2024 | Student | Scrum Master | &lt;/table&gt;&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; . .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%205/2022/09/25/Javascript.html",
            "relUrl": "/apcsp%20week%205/2022/09/25/Javascript.html",
            "date": " • Sep 25, 2022"
        }
        
    
  
    
        ,"post21": {
            "title": "TEDTalk Discussions and Takeaways",
            "content": "What I Learned . I learned a lot of things from this presentation. Laurie Santos enlightened me on the way to live an overall happier life and improve the way I live on a day to day basis. I learned how important it is to take time out of my day to be thankful and grateful for all the things given to me in life. She taught me to really count all the blessings I have in life. After learning this, I’ve started to try taking a minute or two out of my day to write out all the things I am grateful for. Not only did she say studies prove that this increases a better quality of life, but personally, I’m starting to see positive results. Santos also taught me the importance of helping other people. She expressed that people who help others are more happy in life. I’ve also started to help others before helping myself at times, and can really start to see a happier lifestyle panning out. . What My Partner Learned . My partner Saavan took away a ton of concepts as well. One thing Saavan took from Santos was that helping others help us more than we expect. He can relate to this because he noticed that the more he starts helping and giving to others, the happier his life becomes. Another thing he took away was writing a letter of gratitude to someone. He noticed that people that receive this letter will actually appreciate it more than you will ever know. Giving a letter of gratitude to someone spreads the happiness they bring you to them, which will reciprocate it back. . What My Group Took Away . Derek’s Thoughts: What I found interesting about the video is that everyone deals with stress, and it is not something easy to just deal with. One thing that Laurie Santos was that 40% of the students from her class in Yale said they feel helpless. This really struck me because it puts into perspective how many people deal with some sort of unhappiness and that we are not alone. . Rohan’s Thoughts: It was relatable, she mentioned good strategies to reduce stress. The statistics that she said were also very alarming to me. I also believe that stress hinders the ability to learn. . Dillon’s Thoughts: I found it very surprising how much anxiety and stress the average college student has during their time spent in academic environment. It makes me worry about myself and how college life will be like. I also reflect and think about how much correlation it has with high school stress at Del Norte. . Saavan’s Thoughts: I thought it was good to know the things we need to do to relieve stress. I believe that it is very important in working towards living a happier life, and its not as easy as it sounds. . Note of Gratitude to My Brother . I wanted to write a note of gratitude to my brother. I just wanted to thank him for listening to personal stuff I can only talk to him about, and helping me better myself in ways. I’m thankful that he takes the time out of his busy day to go to the gym with me if I ask. I also am thankful that he understands and tells me what I need to work on so that I can better myself academically and in my personal growth. . Gratitude List . Things Im Grateful for: . my parents | my brother | my friends | house | food | water | clothes | my dog | .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%203/2022/09/20/TEDTalknotes.html",
            "relUrl": "/apcsp%20week%203/2022/09/20/TEDTalknotes.html",
            "date": " • Sep 20, 2022"
        }
        
    
  
    
        ,"post22": {
            "title": "AppLab Planning/Blogging",
            "content": "Applab Planning/Blogging . Outline of Quiz . For our outline, Saavan and I wanted to create a quiz revolved around NBA. So we planned out 3 NBA questions that we wanted to use, and started planning out how we want the site to look. We wanted a home screen to introduce the quiz with a start button, 3 separate screens for each question, 2 other screens for if you get the question wrong or right, and a final screen to address that you have won and the results. . Successes . This is me breaking down the success of figuring out how to code a button so that it switches to a new screen. . 1. Program Purpose and Function . The purpose of this program is so that the when the button is clicked, it switches the current screen to a new one. The input of this program is the onEvent, where if the start button is clicked, then it will do the function of the set screen, which is the output of screen2, which will change the current screen to that. . 2. Data Abstraction . The name of the variable is start_button. It is representing what needs to be “clicked”, in order for the input to work. . Discoveries . One discovery that I found was how to code a button so that it switches to a new screen. Another discovery I found was how to work a dropdown so that if it clicks on certain options it sets the screen to that option. . Challenges . There were a ton of problems that we encountered once we started creating our site. Some minor problems was figuring out how to code a button so that it goes to the next screen, how to code an image so that if it is clicked it goes to the next screen, etc. But once we figured out the code to that, if was very satisfying and much easier to create our App. However one idea that we came up with was making it so that if they get the question wrong or right, it takes them to a screen telling them that, and then a button to make them proceed or go back. This was a slight problem because we realized that we can’t just have one screen for wrong or right, but have that for each question, since the buttons would have to take you back or move you forward at different questions. . . This picture displays the 6 different screens we had to make, since we had to make a correct and wrong screen for each question, which would rather bring them back to the same question if they got it wrong, or proceed to the next question if they get it right, or the results if they get the final question right. .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%203/2022/09/11/Applabplanning.html",
            "relUrl": "/apcsp%20week%203/2022/09/11/Applabplanning.html",
            "date": " • Sep 11, 2022"
        }
        
    
  
    
        ,"post23": {
            "title": "Performance Task Planning/Draft",
            "content": "Idea on Project . An idea I had for this project is somehow creating a website with a whole bunch of movies and TV shows that you can choose from, and a way to search for all of them. The technical requirements for this project include: . Final program code (created independently or collaboratively) | A video that displays the running of your program and demonstrates functionality you developed (created independently) | Written responses to all the prompts in the performance task (created independently) | . I feel like the things I can design now are probably the dropdown menu to choose from all these movies, and the code for when they click on the movie, for it to take them to a different screen to watch it. It also says &quot;students need practice implementing programs that first include sequencing, then incorporate selection and iteration, and finally use procedures and lists.&quot; I feel that we&#39;ve touched most if not all of these basics over the first couple of weeks. Somethings I would still need to learn is how to put the actual movie or TV show on the site, so when they hit play, they are watching it on the site. Some resources that I have available is code.org to maybe help we work with building apps more and understanding the code, the people around me in this class, and past students that have already taken this class. . from IPython.display import Image Image(filename=&quot;/Users/dmsol/Tera/images/Screen Shot 2022-09-11 at 12.29.24 PM.png&quot;, width=600, height=400) .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%203/2022/09/10/performancetaskplanning.html",
            "relUrl": "/apcsp%20week%203/2022/09/10/performancetaskplanning.html",
            "date": " • Sep 10, 2022"
        }
        
    
  
    
        ,"post24": {
            "title": "AppLab NBA Quiz and NBA Stats App",
            "content": "Partner NBA Quiz . Partner NBA Stats App .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%203/2022/09/09/Applabquiz.html",
            "relUrl": "/apcsp%20week%203/2022/09/09/Applabquiz.html",
            "date": " • Sep 9, 2022"
        }
        
    
  
    
        ,"post25": {
            "title": "My Loop Marvel Quiz",
            "content": "InfoDb = [] # InfoDB is a data structure with expected Keys and Values # Append to List a Dictionary of key/values related to a person and cars InfoDb.append({ &quot;FirstName&quot;: &quot;Derek&quot;, &quot;LastName&quot;: &quot;Sol&quot;, &quot;DOB&quot;: &quot;January 17&quot;, &quot;Residence&quot;: &quot;San Diego&quot;, &quot;Email&quot;: &quot;dmsol218@gmail.com&quot;, &quot;Owns_Cars&quot;: [&quot;2018 Toyota Camry SE&quot;] }) . For loop/For loop with Index . def print_data(d_rec): print(d_rec[&quot;FirstName&quot;], d_rec[&quot;LastName&quot;]) # using comma puts space between values print(&quot; t&quot;, &quot;Residence:&quot;, d_rec[&quot;Residence&quot;]) # t is a tab indent print(&quot; t&quot;, &quot;Birth Day:&quot;, d_rec[&quot;DOB&quot;]) print(&quot; t&quot;, &quot;Cars: &quot;, end=&quot;&quot;) # end=&quot;&quot; make sure no return occurs print(&quot;, &quot;.join(d_rec[&quot;Owns_Cars&quot;])) # join allows printing a string list with separator print() # for loop algorithm iterates on length of InfoDb def for_loop(): print(&quot;For loop output n&quot;) for record in InfoDb: print_data(record) for_loop() . For loop output Derek Sol Residence: San Diego Birth Day: January 17 Cars: 2018 Toyota Camry SE . While Loop . def while_loop(): print(&quot;While loop output n&quot;) i = 0 while i &lt; len(InfoDb): record = InfoDb[i] print_data(record) i += 1 return while_loop() . While loop output Derek Sol Residence: San Diego Birth Day: January 17 Cars: 2018 Toyota Camry SE . Recursion . def recursive_loop(i): if i &lt; len(InfoDb): record = InfoDb[i] print_data(record) recursive_loop(i + 1) return print(&quot;Recursive loop output n&quot;) recursive_loop(0) . Recursive loop output Derek Sol Residence: San Diego Birth Day: January 17 Cars: 2018 Toyota Camry SE . Marvel Quiz Version 1 . q1 = &quot;&quot;&quot;What is Captain America&#39;s shield made out of? a. Vibranium b. Steel c. Iron d. Copper&quot;&quot;&quot; q2 = &quot;&quot;&quot;How many Infinity Stone are there? a. 4 b. 6 c. 3 d. 8&quot;&quot;&quot; q3 = &quot;&quot;&quot;Who lifts Thor&#39;s hammer in Endgame? a. Iron Man b. Vision c. Captain America d. Captain Marvel&quot;&quot;&quot; questions = {q1 : &quot;a&quot;,q2 : &quot;b&quot;,q3 : &quot;c&quot;} name = input(&quot;Enter your name: &quot;) print(&quot;Hello&quot;,name, &quot;welcome to the this Marvel quiz, lets get started...&quot;) score=0 for i in questions: print(i) ans = input(&quot;enter the answer(a/b/c/d) : &quot;) if ans==questions[i]: print(&quot;correct answer, you got 1 point&quot;) score = score+1 else: print(&quot;wrong answer, you lost 1 point&quot;) score=score-1 print(&quot;Final score is:&quot;, score) . Hello Derek Sol welcome to the this Marvel quiz, lets get started... What is Captain America&#39;s shield made out of? a. Vibranium b. Steel c. Iron d. Copper correct answer, you got 1 point How many Infinity Stone are there? a. 4 b. 6 c. 3 d. 8 correct answer, you got 1 point Who lifts Thor&#39;s hammer in Endgame? a. Iron Man b. Vision c. Captain America d. Captain Marvel correct answer, you got 1 point Final score is: 3 . Marvel Quiz Version 2 . def new_game(): guesses = [] correct_guesses = 0 question_num = 1 for key in questions: print(&quot;-&quot;) print(key) for i in options[question_num-1]: print(i) guess = input(&quot;Enter (A, B, C, or D): &quot;) guess = guess.upper() guesses.append(guess) correct_guesses += check_answer(questions.get(key),guess) question_num += 1 display_score(correct_guesses, guesses) # - def check_answer(answer, guess): if answer == guess: print(&quot;CORRECT!&quot;) return 1 else: print(&quot;WRONG!&quot;) return 0 # - def display_score(correct_guesses, guesses): print(&quot;-&quot;) print(&quot;RESULTS&quot;) print(&quot;-&quot;) print(&quot;Answers: &quot;, end=&quot;&quot;) for i in questions: print(questions.get(i), end =&quot; &quot;) print() print(&quot;Guesses: &quot;, end=&quot;&quot;) for i in guesses: print(i, end =&quot; &quot;) print() score = int((correct_guesses/len(questions))*100) print(&quot;Your score is: &quot;+str(score)+&quot;%&quot;) # - def play_again(): response = input(&quot;Do you want to play again?: (yes or no): &quot;) response = response.upper() if response == &quot;YES&quot;: return True else: return False # - questions = { &quot;What is Captain America&#39;s shield made out of?: &quot;: &quot;A&quot;, &quot;How many Infinity Stones are there?: &quot;: &quot;B&quot;, &quot;Who lifts Thor&#39;s hammer in Endgame?: &quot;: &quot;C&quot;, &quot;Who holds the Time Stone?: &quot;: &quot;A&quot;, } options = [[&quot;A. Vibranium&quot;, &quot;B. Copper&quot;, &quot;C. Iron&quot;, &quot;D. Steel&quot;], [&quot;A. 4&quot;, &quot;B. 6&quot;, &quot;C. 3&quot;, &quot;D. 2&quot;], [&quot;A. Iron Man&quot;, &quot;B. Vision&quot;, &quot;C. Captain America&quot;, &quot;D. Captain Marvel&quot;], [&quot;A. Doctor Strange&quot;, &quot;B. Ant-Man&quot;, &quot;C. Vision&quot;, &quot;D. Thor&quot;]] new_game() while play_again(): new_game() print(&quot;Bye!&quot;) . - What is Captain America&#39;s shield made out of?: A. Vibranium B. Copper C. Iron D. Steel CORRECT! - How many Infinity Stones are there?: A. 4 B. 6 C. 3 D. 2 CORRECT! - Who lifts Thor&#39;s hammer in Endgame?: A. Iron Man B. Vision C. Captain America D. Captain Marvel CORRECT! - Who holds the Time Stone?: A. Doctor Strange B. Ant-Man C. Vision D. Thor WRONG! - RESULTS - Answers: A B C A Guesses: A B C D Your score is: 75% - What is Captain America&#39;s shield made out of?: A. Vibranium B. Copper C. Iron D. Steel CORRECT! - How many Infinity Stones are there?: A. 4 B. 6 C. 3 D. 2 CORRECT! - Who lifts Thor&#39;s hammer in Endgame?: A. Iron Man B. Vision C. Captain America D. Captain Marvel CORRECT! - Who holds the Time Stone?: A. Doctor Strange B. Ant-Man C. Vision D. Thor CORRECT! - RESULTS - Answers: A B C A Guesses: A B C A Your score is: 100% Bye! .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%202/2022/09/04/loop.html",
            "relUrl": "/apcsp%20week%202/2022/09/04/loop.html",
            "date": " • Sep 4, 2022"
        }
        
    
  
    
        ,"post26": {
            "title": "Remote Theme Screenshot",
            "content": "from IPython.display import Image Image(filename=&quot;/Users/dmsol/Tera/images/midnight.png&quot;, width=700, height=500) . Problems that I noticed from changing the remote theme is that the pages at the top right are gone, like the &quot;about,&quot; &quot;notes,&quot; &quot;search,&quot; etc. .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%202/2022/09/03/remotetheme.html",
            "relUrl": "/apcsp%20week%202/2022/09/03/remotetheme.html",
            "date": " • Sep 3, 2022"
        }
        
    
  
    
        ,"post27": {
            "title": "Reading Notes For Ap Gov   Derek Sol",
            "content": "8/18/22 . Forms of Government Notes: . Autocracy . One person has all the power . | Two main types: monarchy/dictatorship . | . Monarchy . king/queen rules the country . | King or queen is known as the monarch . | Come to power through family line, current kings/queens oldest child becomes next queen/king . | Olden times, Have final say over government . | Modern times, share power with other parts of government . | . Dictatorship . One leader with absolute control over the people . | Has control over things, like a constitution . | Parts of government do what the dictator wants . | . Democracy . Citizens hold power . | Two types of democracies: representative/direct . | . Representative democracy . The people elect leaders to represent them in government . | They do all the necessary things to keep the country running . | Citizens hold ultimate power, if they don’t like what their representatives do, they can vote new representatives . | . Direct democracy . No representative, people directly involved in governing the country . | Might be required to participate in lawmaking or judges . | Most modern countries too large for direct democracy to work . | . Oligarchy(oligarchy- rule by a few) . Small group of people hold all the power . | Only certain group has political rights . | Few people control the country . | Junta - small group of people (usually military officers) who rule a country after taking it by force . | Junta operates kind of like a dictatorship . | . Theocracy(theo = God) . Government that puts God or a divine being as the ultimate authority . | Religious law settles . | . 8/19/22 . Public Policy . The goals and programs our government creates and implements for society (to create order and take care of people) . | Complicated process - involves various stakes and “inputs” . | Inputs: voters, media, special interest groups(organization that are non-governmental), politicians . | . Role of Government . What should the government do? (National, state and local) . | National government - government of the U.S., federal government . | State government - governor, make a lot of rules/regulations for California, whether constitution does not discuss is left to the states . | Local government - mayor, city council, school board . | Answers varu. Ideas differ. . | We do agree on some basic things! . | . Limited government . | Rule of law . | Social contract . | Democracy . | . Tonight’s Reading Notes: Liberal &amp; Conservatives . DQ: What are some examples in which libertarians would like the government to take minimal take action? . The Ideas that Divide Us . Most Americans are united through key values (democracy, freedom, and equality) . | We are dramatically different; regilionm education geographically, and backgrounds . | This creates different opinions politically and can divide us . | . Ideologies - different belief systems . Our ideologies depend on the arguments we make to back them up . | Our debate is narrow in the U.S. compared to other countries . | No communist or socialist parties in the U.S. . | Two main ideological camps, liberals(Democratic Party) and conservatives(Republicans) . | Conservatives form a political opinon from traditional social values, distrust of government action, resistance to change, and social order . | Liberals form a political opinon from potential for progress and change, trust in government, innovations to answer societies problems, and expansion of individual rights/expression . | . The Economic Dimension . Since FDR and Great Depression, conservatives and liberals differ on how much they should trust the government . | Conservatives = not trust gov with too much power . | Liberals = willing to trust gov more to regulate economy . | Conservatives = right . | Liberals = left . | . The Social Order Dimension . People divided on how much of the government’s role should partake in controlling their lives . | Conservatives view of social order = emphasize religion in public life, no abortion/suicide, promote traditional family values(no gay marriage/rights), “American Way”(no diversity/restricting immigration), people should know their place in society, block anything that promotes the opposite of this . | Liberals view of social order = preserve environment, community of equality/protect minorites, individual safety(gun control laws) . | . The Relationship Between the Two Ideological Dimensions . Economic liberals - willing to let government make decisions about the economy and like individualistic positions in social order . Favor housing subsidies for the poor . | Taxing to support social programs . | Affirmative action . | Prefer individuals to have full freedom on noneconomic terms . | Value diversity/expanding rights to those who were left out . | . Economic conservatives - dont want government to interfere with peoples private lives and that gov should limit their role in economy too . Lessen role of decision making to relugate the market . | Eliminate unfair trade practices . | Provision of some public goods . | Open policies to immigrants . | . Libertarians - extreme holders of economic conservative views, believe that only minimal government action is necessary . Social liberals - like some government role to achieve more equal distribution of material resources and want some role in social order too . Like freedom to make individual moral choices . | Want government action for diverse and equal power structure and regulate to better health and safety . | . Communitarians - extreme of social liberalisms, strong commitment to community by equality of all people . Social conservatives - want limited government involvement economically but less forcefully than conservatives . Concern of moral life . | Emphasize funadmentalist religious values and traditional family roles(gov control of reproductive choices) . | Reject change or diversity . | Immigration is a threat, dilutes social order . | Protect moral character, like a community thatemphasizes hierarchical order over equality . | Like a large/powerful state . | . Class Discussion: . Ideologies - set of beliefs about politics and society that help us make sense of the world(parents most influence this) . U.S - 2 primary ideological camps . . Most Americans are somewhere in the middle of the political spectrum and are not extreme in their views(called moderates) . | Republican and Democrat are NOT ideologies, they are parties…it’s different! . | Many conservative and liberal political parties. R’s/D’s are just the two biggest ones in US poltiics . | . Liberals - Democrats, Green Party . Conservatives Republicans, Reform Party . Libertarians - conservative, consistent about little government intervention . 1930’s Key time period - Great Depression . -New ideas on government intervention(more of it) - more liberal . Polarization . -means being farther apart in views . -L and C are MORE polarized in recent years . Why? Lots of theories: media, social media, weak parties, a primary system with low voter turnout(mostly those more extreme), little incentive for one party to “help” the other party govern after an election . -Polarization makes compromise harder . . 8/23/22 Notes . -Vouchers . -Public education is paid for by taxpayer dollars, mostly by state taxes . -some fed gov money, but constitution says nothing about education, thats why states mainly pay for it . 8/23/22 . Media Lecture Notes . Types of Media . Print - it is hardcopy, like newspapers . Less readers of Print media . | Influential, don’t want to see newspapers die out . | More politically active . | MORE reporting . | Ex: NYT, LA Times, WAPO . | . Broadcast Media - news from the TV or radio . Where most people get there news . | Ex: ABC, CBS, NBC, CNN, etc. . | Talk radio - radio host where people come on and you interview them, not scripted, very partisan . | Internet - changed media and a lot more people need it . | Mix of sites, a lot are inaccurate . | . How Media Works . Profit, most driven by this . | They get it from advertising . | Conglomerates . | Can watch two different news station and they could actually both be owned by Disney, so should look at a variety of stations . | Professional Code of Ethics - Truthful, accuracy, etc. . | Correct themselves . | Reliable sources . | . Source Types . “On-the-record” - can be quoted, nothing has to be hidden, can use name and everything . | “On background” - dont use my name, but you can quote me, you can also give some hint as to where I work . | “On deep background” - take away more information, source is more deeply hidden, no quote directy but paraphrase allowed, can’t name person or where they work . | “Off the record” - nothing can be used, no information can come out, basically research for the reporter . | . Roles of the Media . Gatekeeper - the media can control and determine what and how long something can become a national political issue, they determine whats important to us and whats not . | Watchdog - Responsible of keeping track what the government does that might be wrong (Ex: Watergate scandal) . | Score Keeper - candidate does something or says something that is not great or good, makes politicians more careful with what they do . | Agenda Setter - similar to gatekeeper, helping the public decide what is important, whether public think is important is what the government is going to address . | . 8/24/22 . Fake News . Intential false information published as a fact . | NOT satire . | NOT an unintentional mistake . | NOT true information that you disagree with . | NOT editorial . | . How to Tell If it’s Fake News . Look at the URL - .co, .lo, .com. . | Check the “About Us” section . | Is there an address, location, staff? . | Who is the author? Do they have some credibility, Reporter? . | Check news on a factcheck site, factcheck.org or snopes.com . | Avoid provocative headlines . | Are there ridiculous statements? . | Avoid headlines or stories that use ALL CAPS . | Clickbait = “X reasons why…” . | . How to tell if it’s fake news or satire . If it sounds like a joke . | . Conspiracy theories . Conspiracy sources published unverified information that relates to known conspiracies (Aliens, Illuminati, etc.) . | Psuedoscience is similar, punlishes unverified health and scientific claim . | . Confirmation Bias . Confirmation bias leads you to believe information just because you happen to agree with and discount the parts you don’t . | Just because you think i’ts true doesn’t make it true . | If your goal is to find the truth - you need to use critical thinking skills to evaluate the validity of information . | . 8/26/22 . AP Government Current Events .",
            "url": "https://dereksol.github.io/Tera/2022/08/28/Reading-Notes-for-AP-Gov-Derek-Sol.html",
            "relUrl": "/2022/08/28/Reading-Notes-for-AP-Gov-Derek-Sol.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post28": {
            "title": "Who is Derek Sol?",
            "content": "Things I like To Do . Play Basketball | Play video games | Spend time with friends and family | Watch TV Shows and Movies | .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%201/2022/08/28/Derekpersonal.html",
            "relUrl": "/apcsp%20week%201/2022/08/28/Derekpersonal.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post29": {
            "title": "My Notebook Quiz",
            "content": "print(&quot;Hello World!&quot;) . Hello World! . msg = input(&quot;Enter a greeting: &quot;) print(msg) . this is my quiz . def question_and_answer(prompt): print(&quot;Question: &quot; + prompt) msg = input() print(&quot;Answer: &quot; + msg) question_and_answer(&quot;Name the Python output command mentioned in this lesson?&quot;) question_and_answer(&quot;If you see many lines of code in order, what would College Board call it?&quot;) question_and_answer(&quot;Describe a keyword used in Python to define a function?&quot;) . Question: Name the Python output command mentioned in this lesson? Answer: prompt Question: If you see many lines of code in order, what would College Board call it? Answer: sequence Question: Describe a keyword used in Python to define a function? Answer: def . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 3 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) question_and_answer(&quot;Are you ready to take a test?&quot;) rsp = question_with_response(&quot;What command is used to include other functions that were previously developed?&quot;) if rsp == &quot;import&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What command is used to evaluate correct or incorrect response in this example?&quot;) if rsp == &quot;if&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition?&quot;) if rsp == &quot;expression&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) print(getpass.getuser() + &quot; you scored &quot; + str(correct) +&quot;/&quot; + str(questions)) . Hello, dmsol running /Library/Developer/CommandLineTools/usr/bin/python3 You will be asked 3 questions. Question: Are you ready to take a test? Answer: yes Question: What command is used to include other functions that were previously developed? import is correct! Question: What command is used to evaluate correct or incorrect response in this example? if is correct! Question: Each &#39;if&#39; command contains an &#39;_________&#39; to determine a true or false condition? expression is correct! dmsol you scored 3/3 . Disney Themed Quiz . import getpass, sys def question_with_response(prompt): print(&quot;Question: &quot; + prompt) msg = input() return msg questions = 4 correct = 0 print(&#39;Hello, &#39; + getpass.getuser() + &quot; running &quot; + sys.executable) print(&quot;You will be asked &quot; + str(questions) + &quot; questions.&quot;) rsp = question_with_response(&quot;What does Hakuna Matata mean?&quot;) if rsp == &quot;no worries&quot;: print(rsp + &quot; is right!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What was the first Disney Princess to have a movie?&quot;) if rsp == &quot;Snow White&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What was the name of Simba&#39;s father in the Lion King?&quot;) if rsp == &quot;Mufasa&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) rsp = question_with_response(&quot;What was the first animated movie to be nominated for Best Picture at the Oscars?&quot;) if rsp == &quot;Beauty and the Beast&quot;: print(rsp + &quot; is correct!&quot;) correct += 1 else: print(rsp + &quot; is incorrect!&quot;) Percentage = correct/4 print(&quot;You got &quot; +str(int(Percentage*100))+&quot;%&quot;) . Hello, dmsol running /Library/Developer/CommandLineTools/usr/bin/python3 You will be asked 4 questions. Question: What does Hakuna Matata mean? no worries is right! Question: What was the first Disney Princess to have a movie? Cinderella is incorrect! Question: What was the name of Simba&#39;s father in the Lion King? Mufasa is correct! Question: What was the first animated movie to be nominated for Best Picture at the Oscars? Beauty and the Beast is correct! You got 75% .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%201/2022/08/28/Derek.html",
            "relUrl": "/apcsp%20week%201/2022/08/28/Derek.html",
            "date": " • Aug 28, 2022"
        }
        
    
  
    
        ,"post30": {
            "title": "Bash Tutorial",
            "content": "echo &quot;Using conditional statement to create a project directory and project&quot; # Variable section export project_dir=$HOME/vscode # change vscode to different name to test git clone export project=$project_dir/APCSP # change APCSP to name of project from git clone export project_repo=&quot;https://github.com/nighthawkcoders/APCSP.git&quot; # change to project of choice cd ~ # start in home directory # Conditional block to make a project directory if [ ! -d $project_dir ] then echo &quot;Directory $project_dir does not exists... makinng directory $project_dir&quot; mkdir -p $project_dir fi echo &quot;Directory $project_dir exists.&quot; # Conditional block to git clone a project from project_repo if [ ! -d $project ] then echo &quot;Directory $project does not exists... cloning $project_repo&quot; cd $project_dir git clone $project_repo cd ~ fi echo &quot;Directory $project exists.&quot; . Using conditional statement to create a project directory and project Directory /Users/dmsol/vscode exists. Directory /Users/dmsol/vscode/APCSP exists. . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project pwd echo &quot;&quot; echo &quot;list top level or root of files with project pulled from github&quot; ls echo &quot;&quot; echo &quot;list again with hidden files pulled from github&quot; ls -a # hidden files flag, many shell commands have flags echo &quot;&quot; echo &quot;list all files in long format&quot; ls -al # all files and long listing . Navigate to project, then navigate to area wwhere files were cloned /Users/dmsol/vscode/APCSP list top level or root of files with project pulled from github Gemfile _includes _word LICENSE _layouts assets Makefile _notebooks docker-compose.yml README.md _pages images _action_files _plugins index.html _config.yml _posts python _fastpages_docs _sass list again with hidden files pulled from github . Makefile _posts .. README.md _sass .devcontainer.json _action_files _word .git _config.yml assets .gitattributes _fastpages_docs docker-compose.yml .github _includes images .gitignore _layouts index.html .vscode _notebooks python Gemfile _pages LICENSE _plugins list all files in long format total 96 drwxr-xr-x 28 dmsol staff 896 Aug 21 22:08 . drwxr-xr-x 4 dmsol staff 128 Aug 24 11:54 .. -rw-r--r-- 1 dmsol staff 420 Aug 21 22:08 .devcontainer.json drwxr-xr-x 14 dmsol staff 448 Aug 25 15:18 .git -rw-r--r-- 1 dmsol staff 84 Aug 21 22:08 .gitattributes drwxr-xr-x 4 dmsol staff 128 Aug 21 22:08 .github -rw-r--r-- 1 dmsol staff 917 Aug 21 22:08 .gitignore drwxr-xr-x 3 dmsol staff 96 Aug 21 22:08 .vscode -rwxr-xr-x 1 dmsol staff 1304 Aug 21 22:08 Gemfile -rw-r--r-- 1 dmsol staff 11351 Aug 21 22:08 LICENSE -rwxr-xr-x 1 dmsol staff 1422 Aug 21 22:08 Makefile -rwxr-xr-x 1 dmsol staff 3614 Aug 21 22:08 README.md drwxr-xr-x 18 dmsol staff 576 Aug 21 22:08 _action_files -rw-r--r-- 1 dmsol staff 3716 Aug 21 22:08 _config.yml drwxr-xr-x 24 dmsol staff 768 Aug 21 22:08 _fastpages_docs drwxr-xr-x 29 dmsol staff 928 Aug 21 22:08 _includes drwxr-xr-x 6 dmsol staff 192 Aug 21 22:08 _layouts drwxr-xr-x 12 dmsol staff 384 Aug 25 15:18 _notebooks drwxr-xr-x 9 dmsol staff 288 Aug 25 15:18 _pages drwxr-xr-x 4 dmsol staff 128 Aug 21 22:08 _plugins drwxr-xr-x 29 dmsol staff 928 Aug 25 15:18 _posts drwxr-xr-x 3 dmsol staff 96 Aug 21 22:08 _sass drwxr-xr-x 3 dmsol staff 96 Aug 21 22:08 _word drwxr-xr-x 4 dmsol staff 128 Aug 21 22:08 assets -rwxr-xr-x 1 dmsol staff 1136 Aug 21 22:08 docker-compose.yml drwxr-xr-x 52 dmsol staff 1664 Aug 21 22:08 images -rw-r--r-- 1 dmsol staff 1061 Aug 21 22:08 index.html drwxr-xr-x 3 dmsol staff 96 Aug 21 22:08 python . # You must run cells above to define variable and project echo &quot;Look for posts&quot; export posts=$project/_posts # _posts inside project cd $posts # this should exist per fastpages pwd # present working directory ls -l # list posts . Look for posts /Users/dmsol/vscode/APCSP/_posts total 456 -rw-r--r-- 1 dmsol staff 21306 Aug 21 22:08 2022-06-01-TT160-deploy.md -rw-r--r-- 1 dmsol staff 5861 Aug 21 22:08 2022-07-07-PBL-binary.md -rw-r--r-- 1 dmsol staff 3085 Aug 21 22:08 2022-07-08-PBL-grade_calc.md -rw-r--r-- 1 dmsol staff 3698 Aug 21 22:08 2022-07-08-PBL-graph.md -rw-r--r-- 1 dmsol staff 5729 Aug 21 22:08 2022-07-08-PBL-life.md -rw-r--r-- 1 dmsol staff 14387 Aug 21 22:08 2022-07-08-PBL-snake.md -rw-r--r-- 1 dmsol staff 334 Aug 21 22:08 2022-07-10-PBL-database.md -rw-r--r-- 1 dmsol staff 2908 Aug 21 22:08 2022-07-10-PBL-jokes.md -rw-r--r-- 1 dmsol staff 4046 Aug 21 22:08 2022-07-10-PBL-rapidapi.md -rw-r--r-- 1 dmsol staff 6685 Aug 21 22:08 2022-07-19-PBL-calculator.md -rw-r--r-- 1 dmsol staff 23325 Aug 21 22:08 2022-07-25-CSP-workshop.md -rw-r--r-- 1 dmsol staff 2333 Aug 21 22:08 2022-08-15-TP000-student_score_history.md -rw-r--r-- 1 dmsol staff 4363 Aug 21 22:08 2022-08-15-TP100-pseudo_code.md -rw-r--r-- 1 dmsol staff 7968 Aug 21 22:08 2022-08-15-TR100-tool_setup.md -rw-r--r-- 1 dmsol staff 15026 Aug 21 22:08 2022-08-15-TT100-tools.md -rw-r--r-- 1 dmsol staff 5590 Aug 21 22:08 2022-08-15-TT101-vscode-wsl.md -rw-r--r-- 1 dmsol staff 2155 Aug 25 15:18 2022-08-22-TR110-intro_python.md -rw-r--r-- 1 dmsol staff 5173 Aug 21 22:08 2022-08-22-TT110-fastpages.md -rw-r--r-- 1 dmsol staff 2798 Aug 25 15:18 2022-08-22-TT110-focus.md -rw-r--r-- 1 dmsol staff 2737 Aug 21 22:08 2022-08-29-TR120-data_abstract.md -rw-r--r-- 1 dmsol staff 10683 Aug 21 22:08 2022-08-29-TT120-agile.md -rw-r--r-- 1 dmsol staff 4498 Aug 21 22:08 2022-08-29-TT120-html_fragments.md -rw-r--r-- 1 dmsol staff 9037 Aug 21 22:08 2022-09-05-TP130-create_performance_task.md -rw-r--r-- 1 dmsol staff 7753 Aug 21 22:08 2022-09-05-TP131-create-task-bria.md -rw-r--r-- 1 dmsol staff 8066 Aug 21 22:08 2022-09-05-TR130-creative_development.md -rw-r--r-- 1 dmsol staff 3520 Aug 21 22:08 2022-09-05-TT130-applab.md -rw-r--r-- 1 dmsol staff 720 Aug 21 22:08 README.md . echo &quot;Look for notebooks&quot; export notebooks=$project/_notebooks # _notebooks is inside project cd $notebooks # this should exist per fastpages pwd # present working directory ls -l # list notebooks . Look for notebooks /Users/dmsol/vscode/APCSP/_notebooks total 280 -rw-r--r-- 1 dmsol staff 14243 Aug 21 22:08 2022-06-01-TT150-webapi_tutorial.ipynb -rw-r--r-- 1 dmsol staff 8653 Aug 21 22:08 2022-07-21-PBL-neo4j_intro.ipynb -rw-r--r-- 1 dmsol staff 11694 Aug 25 15:18 2022-08-22-TP110-python_hello.ipynb -rw-r--r-- 1 dmsol staff 20003 Aug 25 15:18 2022-08-22-TT110-anthony_and_sahil.ipynb -rw-r--r-- 1 dmsol staff 9797 Aug 25 15:23 2022-08-22-TT110-bash_tutorial.ipynb -rw-r--r-- 1 dmsol staff 35721 Aug 25 15:18 2022-08-25-tool_check.ipynb -rw-r--r-- 1 dmsol staff 10141 Aug 21 22:08 2022-08-29-TP120-python_lists.ipynb -rw-r--r-- 1 dmsol staff 12632 Aug 21 22:08 2022-09-05-TT130-js_tutorial.ipynb -rw-r--r-- 1 dmsol staff 771 Aug 21 22:08 README.md drwxr-xr-x 3 dmsol staff 96 Aug 21 22:08 images . echo &quot;Look for images in notebooks, print working directory, list files&quot; cd $notebooks/images # this should exist per fastpages pwd ls -l . Look for images in notebooks, print working directory, list files /Users/dmsol/vscode/APCSP/_notebooks/images total 200 -rw-r--r-- 1 dmsol staff 101617 Aug 21 22:08 kernels.png . echo &quot;Navigate to project, then navigate to area wwhere files were cloned&quot; cd $project echo &quot;show the contents of README.md&quot; echo &quot;&quot; cat README.md # show contents of file, in this case markdown echo &quot;&quot; echo &quot;end of README.md&quot; . Navigate to project, then navigate to area wwhere files were cloned show the contents of README.md cat: README.md: No such file or directory end of README.md . echo &quot;Show the shell environment variables, key on left of equal value on right&quot; echo &quot;&quot; env . Show the shell environment variables, key on left of equal value on right SHELL=/bin/bash TMPDIR=/var/folders/m3/xnfxr90d6696g4yv0yfqy1_40000gn/T/ CONDA_SHLVL=1 PYTHONUNBUFFERED=1 CONDA_PROMPT_MODIFIER=(base) OLDPWD=/Users/dmsol/vscode/APCSP/_notebooks ORIGINAL_XDG_CURRENT_DESKTOP=undefined MallocNanoZone=0 PYTHONIOENCODING=utf-8 USER=dmsol CONDA_EXE=/opt/anaconda3/bin/conda SSH_AUTH_SOCK=/private/tmp/com.apple.launchd.Ub6XgHKNQG/Listeners __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0 PAGER=cat VSCODE_AMD_ENTRYPOINT=vs/workbench/api/node/extensionHostProcess ELECTRON_RUN_AS_NODE=1 _CE_CONDA= PATH=/opt/anaconda3/bin:/opt/anaconda3/condabin:/Library/Frameworks/Python.framework/Versions/2.7/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin CONDA_PREFIX=/opt/anaconda3 PWD=/Users/dmsol/vscode/APCSP/_notebooks/images notebooks=/Users/dmsol/vscode/APCSP/_notebooks VSCODE_HANDLES_UNCAUGHT_ERRORS=true project_repo=https://github.com/nighthawkcoders/APCSP.git project=/Users/dmsol/vscode/APCSP project_dir=/Users/dmsol/vscode XPC_FLAGS=0x0 PS1=[PEXP [ ]ECT_PROMPT&gt; _CE_M= XPC_SERVICE_NAME=0 SHLVL=2 HOME=/Users/dmsol APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL=1 VSCODE_NLS_CONFIG={&#34;locale&#34;:&#34;en-us&#34;,&#34;availableLanguages&#34;:{},&#34;_languagePackSupport&#34;:true} CONDA_PYTHON_EXE=/opt/anaconda3/bin/python LOGNAME=dmsol VSCODE_IPC_HOOK=/Users/dmsol/Library/Application Support/Code/1.70.2-main.sock VSCODE_CODE_CACHE_PATH=/Users/dmsol/Library/Application Support/Code/CachedData/e4503b30fc78200f846c62cf8091b76ff5547662 CONDA_DEFAULT_ENV=base VSCODE_PID=27686 posts=/Users/dmsol/vscode/APCSP/_posts VSCODE_CWD=/ _=/usr/bin/env . cd $project echo &quot;&quot; echo &quot;show the secrets of .git&quot; cd .git ls -l echo &quot;&quot; echo &quot;look at config file&quot; cat config . show the secrets of .git total 88 -rw-r--r-- 1 dmsol staff 102 Aug 25 15:18 FETCH_HEAD -rw-r--r-- 1 dmsol staff 23 Aug 21 22:08 HEAD -rw-r--r-- 1 dmsol staff 41 Aug 25 15:18 ORIG_HEAD -rw-r--r-- 1 dmsol staff 314 Aug 21 22:08 config -rw-r--r-- 1 dmsol staff 73 Aug 21 22:08 description drwxr-xr-x 15 dmsol staff 480 Aug 21 22:08 hooks -rw-r--r-- 1 dmsol staff 20021 Aug 25 15:18 index drwxr-xr-x 3 dmsol staff 96 Aug 21 22:08 info drwxr-xr-x 4 dmsol staff 128 Aug 21 22:08 logs drwxr-xr-x 44 dmsol staff 1408 Aug 25 15:18 objects -rw-r--r-- 1 dmsol staff 271 Aug 21 22:08 packed-refs drwxr-xr-x 5 dmsol staff 160 Aug 21 22:08 refs look at config file [core] repositoryformatversion = 0 filemode = true bare = false logallrefupdates = true ignorecase = true precomposeunicode = true [remote &#34;origin&#34;] url = https://github.com/nighthawkcoders/APCSP.git fetch = +refs/heads/*:refs/remotes/origin/* [branch &#34;master&#34;] remote = origin merge = refs/heads/master .",
            "url": "https://dereksol.github.io/Tera/apcsp%20week%201/2022/08/25/bash.html",
            "relUrl": "/apcsp%20week%201/2022/08/25/bash.html",
            "date": " • Aug 25, 2022"
        }
        
    
  

  
  
      ,"page0": {
          "title": "About Me",
          "content": "Derek Sol is the GOAT. DerekSol 1. . An absolute GOAT. &#8617; . |",
          "url": "https://dereksol.github.io/Tera/about/",
          "relUrl": "/about/",
          "date": ""
      }
      
  

  
      ,"page1": {
          "title": "Vocabulary",
          "content": "Term Description . Github | The platform for developing different softwares and websites. | . Jupyter Notebook | A platform that allows you to code in multiple different languages. | . Python | A programming language that is open sourced | . Markdown | A software language that allows you to format text. | . Shell Script | A computer program that is used to change a modify different things. | . Code | The language used to program and intialize computer function. | . Input | The command to initiate a certain action. | . Output | The result that is developed due to the input language. | . Repository | A hub that makes use of different code and websites. | . Commit | To initalize a series of code and output the actions. | . Push | To deliver information from one place to another. | . Pull | To request data back from one place to another | . Bash | Another computer language that is used in powershell | . Bin | A binary file that is used by different computer applications | . Scrum Master | The scrum master helps to facilitate the sprint by ensuring that an agile framework is followed. Responsible on tracking issues and maintaining scrum board. | . DevOps | DevOps is the combination of cultural philosophies, practices, and tools that increases an team’s ability to deliver applications and services at high velocity. | . Front-end Developer | A front-end developer builds the front-end portion of websites, the part that users actually see and interact with. | . Back-end Developer | Back-end developers a build and maintain the mechanisms that process data and perform actions like data storage, security, and other server-side functions that you cannot see. | .",
          "url": "https://dereksol.github.io/Tera/vocabulary/",
          "relUrl": "/vocabulary/",
          "date": ""
      }
      
  

  
      ,"page2": {
          "title": "Notes",
          "content": "AP Gov Notes .",
          "url": "https://dereksol.github.io/Tera/Notes/",
          "relUrl": "/Notes/",
          "date": ""
      }
      
  

  

  

  

  

  

  
  

  
  

  
  

  
  

  
  

  

  

  
  

  
      ,"page16": {
          "title": "",
          "content": "Sitemap: {{ “sitemap.xml” | absolute_url }} | .",
          "url": "https://dereksol.github.io/Tera/robots.txt",
          "relUrl": "/robots.txt",
          "date": ""
      }
      
  

}