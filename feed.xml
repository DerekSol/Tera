<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.1.1">Jekyll</generator><link href="https://dereksol.github.io/Tera/feed.xml" rel="self" type="application/atom+xml" /><link href="https://dereksol.github.io/Tera/" rel="alternate" type="text/html" /><updated>2022-10-09T20:04:45-05:00</updated><id>https://dereksol.github.io/Tera/feed.xml</id><title type="html">Termoesu’s Fastpage</title><subtitle>Termoesu fastpage for Computer Science Principles.</subtitle><entry><title type="html">Performance Task Planning/Draft</title><link href="https://dereksol.github.io/Tera/apcsp%20week%203/2022/10/09/performancetaskplanning.html" rel="alternate" type="text/html" title="Performance Task Planning/Draft" /><published>2022-10-09T00:00:00-05:00</published><updated>2022-10-09T00:00:00-05:00</updated><id>https://dereksol.github.io/Tera/apcsp%20week%203/2022/10/09/performancetaskplanning</id><author><name>Derek Sol</name></author><category term="APCSP Week 3" /><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Reading Notes For Ap Gov Derek Sol</title><link href="https://dereksol.github.io/Tera/2022/10/09/Reading-Notes-for-AP-Gov-Derek-Sol.html" rel="alternate" type="text/html" title="Reading Notes For Ap Gov Derek Sol" /><published>2022-10-09T00:00:00-05:00</published><updated>2022-10-09T00:00:00-05:00</updated><id>https://dereksol.github.io/Tera/2022/10/09/Reading-Notes-for-AP-Gov---Derek-Sol</id><author><name></name></author><summary type="html"><![CDATA[8/18/22]]></summary></entry><entry><title type="html">Python RapidAPI</title><link href="https://dereksol.github.io/Tera/techtalk/rapidapi" rel="alternate" type="text/html" title="Python RapidAPI" /><published>2022-10-03T00:00:00-05:00</published><updated>2022-10-03T00:00:00-05:00</updated><id>https://dereksol.github.io/Tera/techtalk/PBL-python_rapidapi</id><author><name></name></author><category term="1.A" /><category term="5.B" /><category term="5.D" /><category term="api" /><category term="rapidapi" /><summary type="html"><![CDATA[APIs can be found all over the internet. A great consolidator of many APIs is RapidAPI. In this blog we will use a site to consolidates API stats. Learning a few lines of code and you can start extracting lots of data from the internet via APIs.]]></summary><media:thumbnail xmlns:media="http://search.yahoo.com/mrss/" url="https://dereksol.github.io/Tera/images/rapidapi.png" /><media:content medium="image" url="https://dereksol.github.io/Tera/images/rapidapi.png" xmlns:media="http://search.yahoo.com/mrss/" /></entry><entry><title type="html">AP Prep Multiple Choice</title><link href="https://dereksol.github.io/Tera/apcsp%20week%206/2022/10/02/APPrep.html" rel="alternate" type="text/html" title="AP Prep Multiple Choice" /><published>2022-10-02T00:00:00-05:00</published><updated>2022-10-02T00:00:00-05:00</updated><id>https://dereksol.github.io/Tera/apcsp%20week%206/2022/10/02/APPrep</id><author><name></name></author><category term="APCSP Week 6" /><summary type="html"><![CDATA[1.1 Collaboration Notes Daily Video 1 Innovations are improved through collaboration in CSP A computing innovation includes a program as an integral part of its function Effective collaboration skills: Communication, consensus building, conflict resolution, negotiation Computing innovation: reflects the diversity of talents and unique perspectives of all the programers who worked to create it Collaboration on projects can reduce bias since there are various perspectives Video Quiz: Daily Video 2 How computing innovations are developed by groups of people Consultation and communication between peers is important Information contributed from all the group members can help understand the purpose of the program and create one that incorporates all the perspectives Online tools can help collaboration such as pair programming Pair programming: work together in pairs- the driver writes the code, the navigator reviews it Think pair share: students work through a problem alone then pair with a partner then share with class It is important to give credit 1.1 Collaboration Quiz 1.2 Program Function and Purpose Notes Daily Video 1 It is important to know and be able to describe the purpose of a computing innovation The purpose could be to solve problems, pursue interests through creative expression, etc. Truly understanding the purpose of a program helps the developer(s) develop the program better Daily Video 2 Identify inputs/outputs to a program Program inputs are data sent to a computer for processing by a program. Some forms can be: tactile, audio, visual, text An event is associated with an action and supplies input data to a program Events can be generated when a key is pressed, a mouse clicked, etc. Can be any defined action that affects the flow of execution Inputs generally affect the output of a program In a program, the code is made in a way that after an action, the code “jumps” to the code segment according to the event Program’s output is based off input or prior state Daily Video 3 A program (software) is a collection of program statements the performs a specific task when run by a computer. A code segment is a collection of program statements that is a part of a program Software needs to work for a variety of inputs The behavior is how the program functions during execution and if often described by how a user can interact with it. Can be described broadly by what it does or in detail on how the program accomplishes its function A program is a collection of statements: A statement is a single command, a group of statements is a code segment, code segments are executed -&gt; a program/software 1.2 Program Function and Purpose Quiz 1.3 Program Design and Development Notes Daily Video 1 Use a development process to develop a program Design a program and its user interface A development process can be ordered and intentional or exploratory in nature Common phases when developing a program: investigating and reflecting, designing, prototyping, testing Requires refinement and revision based on feedback, testing, and reflection: may require revisiting phases Break the project into smaller pieces and make sure each piece works before adding it to the whole Investigate to determine requirements, constraints, concerns and interests of customer Investigate by: collecting data through surveys, user testing, interviews, direct observations Requirements describe how a program functions and may include a description of user interactions that a program should provide Design phase that outlines how to accomplish a program’s goal may include: brainstorming, planning/storyboarding, organizing the program into modules and functional components, creation of diagrams, develop testing strategy Constantly test your program Daily Video 2 When developing a program, it is important to cite and acknowledge code segments used from either another source or developed collaboratively When acknowledging someone else, include the origin of code or authors name in the program documentation Team of people usually work on a program by each focusing on different functional components Each member’s work should be credited in program documentation Sometimes credit is given with comments in the code Many developers use code segments, procedures, algorithms made by others who aren’t part of the project so it is important to credit them Daily Video 3 Describe the purpose of a code segment or program by writing documentation Program documentation: a written description of the function of a code segment, event, procedure, or program and how it was developed EX: comments (don’t effect how the program runs) Should actively document throughout development to help development as well as maintaining correct programs Program documentation created to: describe the program, list specifications, describe different parts of the program, list of contributors Document process: beginning: list specifications, during: keep track of progress, after: explain overall process Documentation improves: programming process efficiency, ability to test and refine program, responding to bugs 1.3 Program Design and Development Quiz]]></summary></entry><entry><title type="html">Java Script Tutorial</title><link href="https://dereksol.github.io/Tera/apcsp%20week%205/2022/09/25/Javascript.html" rel="alternate" type="text/html" title="Java Script Tutorial" /><published>2022-09-25T00:00:00-05:00</published><updated>2022-09-25T00:00:00-05:00</updated><id>https://dereksol.github.io/Tera/apcsp%20week%205/2022/09/25/Javascript</id><author><name>Derek Sol</name></author><category term="APCSP Week 5" /><summary type="html"><![CDATA[]]></summary></entry></feed>